jQUERY EVENTS
==============
jQuery events are the actions that can be detected by your web application. They are used to create dynamic web pages. 

Event Categories are: 

(1) Mouse Events
    click,     dblclick,    mouseenter,   mouseleave, mouseup, mousedown etc

(2) Keyboard Events
    keyup,    keydown,    keypress,

(3) Form Events
    submit,    change,    blur,    focus

(4) Document/Window Events
    load,    unload,    scroll,    resize

etc


To assign a click events to all paragraph on a page:

    $("p").click ();  

The next step defines what should happen when the event fires. You must pass a function to the event.

    $("p").click(function(){  
      // action to take place
    });  

1) jQuery click()
-----------------
When you click on an element, the click event occurs and once the click event occurs it execute the click () method or attaches a function to run.

It is used to trigger the click event for the selected elements.

Syntax:

    $(selector).click(function)  


Example - 1

<html>  
<head>  
<script src="jquery-3.5.1.min.js"> </script>  

<script>  
$(document).ready(function()
{  
 $("p").click(function()
 {  
  alert("This paragraph was clicked.");
 });  
});  
</script>  
</head>  
<body>  
  <p>Click on the statement.</p>  
</body>  
</html>  

Example - 2
To hide the current element on the click

<!DOCTYPE html>  
<html>  
<head>  
<script src="jquery-3.5.1.min.js"> </script>  
<script>  
$(document).ready(function()
{
 $("h1,h2,h3").click(function()
 {  
  $(this).hide();  
 });  
});  
</script>  
</head>  
<body>  
 <h1>This heading will disappear if you click on this.</h1>  
 <h2>I will also disappear.</h2>  
 <h3>Me too.</h3>  
</body>  
</html>  


2) jQuery bind()
----------------
The jQuery bind() event is used to attach one or more event handlers for selected elements.  It specifies a function to run when the event occurs.

Syntax:

    $(selector).bind(event,function) 


    $(selector).bind(event,data,function,map)   

Event 	It is a mandatory parameter. It specifies one or more events to attach to the elements. If you want to add multiple events they they must be separated by space.

Data 	It is an optional parameter. It specifies additional data to pass along to the function.

Function 	It is a mandatory parameter. It executes the function to run when the event occurs.

Map 	It specifies an event map which contains one or more events or functions attached to the element.

<html>  
<head>  
<script src="jquery-3.5.1.min.js"> </script>  

<script>  
$(document).ready(function()
{  
 $("p").bind('click',function()
 {  
  alert("This paragraph was clicked."); 
 });  
});  
</script>  
</head>  
<body>  
<p>Click on the statement.</p>  
</body>  
</html>  

Advantages of jQuery bind() event

> It is compatible on various browsers.
> It is quite easy and quick to bind event handlers.
> It provides some shorthand and easy methods with click(), hover() etc. events for binding event handlers.

jQuery bind() example with mouseenter() and mouseleave() events

<html>  
<head>  
<style> 
*
{
 font-family:verdana;
 font-size:25px;
}
p 
{  
 background: yellow;  
 font-weight: bold;  
 cursor: pointer;  
 padding: 5px;  
}  
.over 
{  
 background: #ccc;  
}  
span 
{  
 color: red;  
}  
</style>  
<script src="jquery-3.5.1.min.js"> </script>  
</head>  

<body>  
<p>Click or double click on the statement.</p>  
<span></span>

<script>  
$('p').bind('click',function(event) 
{  
 var str="("+event.pageX+", "+ event.pageY+")";  
 $("span").text("This is a single click "+str);  
});  

$('p').bind('dblclick',function() 
{  
 $("span").text( "This is a double click on " +this.nodeName );  
});  

$('p').bind('mouseenter mouseleave', 
function(event)
{  
 $(this).toggleClass("over");  
});  
</script>  
</body>  
</html>  


3) jQuery blur()
----------------
The jQuery blur event occurs when element loses focus. It can be generated by via keyboard commands like tab key or mouse click anywhere on the page.

Originally, this event was used only with form elements like <input>. In latest browsers, it has been extended to include all element types.

The blur () method is often used together with focus () method.

Syntax:

    $(selector).blur(function)  


Function 	It is an optional parameter. It is used to specify the function to run when the element loses the focus (blur).

<html>  
<head>  
<script src="jquery-3.5.1.min.js"> </script>  
<script>  
$(document).ready(function()
{  
 $("input").blur(function()
 {  
  alert("This text box has lost its focus.");  
 });  
});  
</script>  
</head>  
<body>  
Enter your name: <input type="text">  
</body>  
</html>  


4) jQuery focus()
-----------------
The jQuery focus event occurs when an element gains focus. It is generated by a mouse click or by navigating to it using keyboard.

The focus method is often used together with blur () method.

Syntax:

    $(selector).focus()  
    $(selector).focus(function)  

Example - 1

<html>  
<head>  
<style>  
*
{
 font-family:verdana;
 font-size:20px;
}
span 
{  
 display: none; 
 color:red;
}  
</style>  
<script src="jquery-3.5.1.min.js"> </script>  
</head>  

<body>  
<p><input type="text"><span>Write your name.</span></p>  

<p><input type="password"> <span>Write your password.</span></p> 

<script>  
$('input').focus(function() 
{  
 $(this).next('span').css('display', 'inline').fadeOut(3000);  
});  
</script>  
</body>  
</html>  



Example -2

<html>  
<head>  
<script src="jquery-3.5.1.min.js"> </script>  
</head>  

<body>  
<p><input type="text" value="you can't 
write"></p>  

<p><input type="password"> </p> 

<script>  
$("input[type=text]").focus(function() 
{  
 $(this).blur();  
});  
</script>  
 </body>  
</html>  
--------------------------------------------



    <!-- Click Event -->
    <h2>Click Event</h2>
    <button class="btn btn-primary" id="btn-1">Register</button>

    <!-- DBL Click -->
    <h2>DBL Click</h2>
    <button class="btn btn-danger" id="btn-2">Login</button>

    <!-- Toggle Effect -->
    <h2>Toggle Effect</h2>
    <button class="btn btn-primary" id="btn-3">register</button>



// Click Event
$('#btn-1').click(function() {
    $(this).removeClass('btn-primary').addClass('btn-danger').text('Login');
});

// DBL Click Event
$('#btn-2').dblclick(function() {
    $(this).removeClass('btn-danger').addClass('btn-primary').text('Register');
});

// toggle effect
$('#btn-3').click(function() {
    if($(this).text() === 'register'){
        $(this).removeClass('btn-primary').addClass('btn-danger').text('login');
    }
    else{
        $(this).removeClass('btn-danger').addClass('btn-primary').text('register');
    }
});

// Keyup event
$('#input-1').keyup(function() {
    $('#display-1').text($(this).val());
});

// Change Event
$('#select-1').change(function() {
    $('#display-2').text($(this).val());
});


--------------------------------------------

5) jQuery select()
------------------
jQuery select event occurs when a text is marked or selected in text area or a text field. 
This event is limited to <input type="text"> fields and <textarea> boxes. When the select event occurs, the select() method attaches a function to run.

Syntax:

    $(selector).select()  
    $(selector).select(function)  


<html lang="en">  
<head>  
<style> 
*
{
 font-family:verdana;
 font-size:20px
}
p 
{  
 color: red;  
}  
div 
{  
 color: blue;  
}  
</style>  

<script src="jquery-3.5.1.min.js"> </script>  
</head>  

<body>  
<p>Select the text on the box: click and drag the mouse to select text.</p>  
<input type="text" value="Sunil">  
<input type="text" value="Joseph">  
<div></div>  

<script>  
$(':input').select(function() 
{  
 $('div').text('Some text was selected').show().fadeOut(3000);  
});  
</script>  
</body>  
</html>  


6) jQuery change()
------------------
jQuery change event occurs when the value of an element is changed. It works only on form fields. When the change event occurs, the change () method attaches a function with it to run.

Note: This event is limited to <input> elements, <textarea> boxes and <select> elements.

    For select boxes, checkboxes, and radio buttons: The event is fired immediately when the user makes a selection with the mouse.
    For the other element types: The event is occurred when the field loses focus.

Syntax:

    $(selector).change()  
    $(selector).change(function)  

Example - 1

<html>    
<head>    
<style>  
*
{
 font-size: 22px;
}
div 
{    
 color: red;    
}    
</style>    
<script src="jquery-3.5.1.min.js"> </script>    
</head>    

<body>  
Select a Number : 
<select id="se">    
<option>One</option>    
<option selected="selected">Two</option> <option>Three</option>    
<option>Four</option>    
<option>Five</option>    
<option>Six</option>    
</select>    

<div id="loc"></div>    

<script>    
$("select").change(function() 
{    
document.getElementById("loc").innerHTML="You selected: "+ document.getElementById("se").value;  
});  
</script>    
</body>    
</html>    


Example - 2

<html>  
<head>  
<style>
*
{
 font-family:verdana;
 font-size:25px;
}
div 
{  
 color: red;  
}  
</style>  

<script src="jquery-3.5.1.min.js"> </script>  
</head>  

<body>  
<select name="numbers" multiple>  
<option>One</option>  
<option selected="selected">Two</option> <option>Three</option>  
<option selected="selected"> Four </option>  
<option>Five</option>  
<option>Six</option>  
</select>  
<div></div> 

<script>  
$("select").change(function() 
{  
 var str="";  
 $("select option:selected").each(function() 
 {  
  str=str+$(this).text()+" ";  
 });  
 $( "div" ).text( str );  
}).change();  
</script>  
</body>  
</html>  


7) jQuery submit()
------------------
jQuery submit event is sent to the element when the user attempts to submit a form (clicks on submit button).

This event is only attached to the <form> element. Forms can be submitted either by clicking on the submit button or by pressing the enter button on the keyboard when that certain form elements have focus. When the submit event occurs, the submit() method attaches a function with it to run.

Syntax:

    $(selector).submit()  
    $(selector).submit(function)  

<html>  
<head>  
<style>  
p 
{  
 margin: 0;  
 color: blue;  
}  
div,p 
{  
 margin-left: 10px;  
}  
span 
{  
 color: red;  
}  
</style>  

<script src="jquery-3.5.1.min.js"> </script>  
</head>  

<body>  
<p>Type 'Sunil' to submit this form finally.</p>  

<form action="javascript:alert('success!' );">  
 <div>  
  <input type="text">  
  <input type="submit">  
 </div>  
</form>  

<span></span>  

<script>  
$("form").submit(function(event)
{  
 if($("input:first").val()==="Sunil") 
 {  
  $("span").text( "Submitted Successfully.").show();  
  return;  
 }  
 $("span").text("Not valid!").show().fadeOut(2000 );  
 event.preventDefault();  
});  
</script>  
</body>  
</html>  


8) jQuery keydown()

When you press a key on the keyboard, the keydown() event is occurred and once the keydown() event is occurred, it executes the function associated with keydown() method to run.

The keydown() event is generally used with two other events.

    Keypress() event: It specifies that the key is pressed down.
    Keyup() event: It specifies that the key is released.

Syntax:

    $(selector).keydown()  

It triggers the keydown event for selected elements.

    $(selector).keydown(function)  


<html>  
<head>  
<script src="jquery-3.5.1min.js"></script>  
<script>  
$(document).ready(function(){  
    $("input").keydown(function(){  
        $("input").css("background-color", "green");  
    });  
    $("input").keyup(function(){  
        $("input").css("background-color", "violet");  
    });  
});  
</script>  
</head>  
<body>  
Write something: <input type="text">  
</body>  
</html>   


jQuery keypress()

The jQuery keypress () event is occurred when a keyboard button is pressed down. This event is similar to keydown() event. The keypress() method is executed or attach a function to run when a keypress() event occurs.

Syntax:

    $(selector).keypress()  

It triggers the keypress event for selected elements.

    $(selector).keypress(function)  

<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
i = 0;  
$(document).ready(function(){  
    $("input").keypress(function(){  
        $("span").text (i += 1);  
    });  
});  
</script>  
</head>  
<body>  
Write something: <input type="text">  
<p>Keypresses: <span>0</span></p>  
</body>  
</html>  


jQuery keyup()

The jQuery keyup() event occurs when a keyboard button is released after pressing. This method is executed or attach a function to run when a keyup() event occurs.

Syntax:

    $(selector).keyup()  

It triggers the keyup event for selected elements.

    $(selector).keyup(function)  

<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("input").keydown(function(){  
        $("input").css("background-color", "red");  
    });  
    $("input").keyup(function(){  
        $("input").css("background-color", "yellow");  
    });  
});  
</script>  
</head>  
<body>  
Write something: <input type="text">  
</body>  
</html>   


jQuery mouseenter()

The mouseenter() method adds an event handler function to an HTML element. This function is executed, when the mouse pointer enters the HTML element.

When you enter your mouse cursor over the selected element, it triggers the mouseenter event and once the mouseenter event is occurred, it executes the mouseenter() method to attach the event handler function to run.

This event is generally used together with mouseleave() event.

Syntax:

    $(selector).mouseenter()  

It triggers the mouseenter event for selected elements.

    $(selector).mouseenter(function)  


<html>    
<head>    
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>    
<script>    
$(document).ready(function(){    
    $("#h1").mouseenter(function(){    
       $( "div" ).text( "Mouse entered on heading" ).show().fadeOut( 2000 );   
    });    
});    
</script>    
</head>    
<body>    
<h1 id="h1">Enter this heading.</h1>   
<div></div>   
</body>    
</html>    


<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("p").mouseenter(function(){  
        $("p").css("background-color", "lightgreen");  
    });  
    $("p").mouseleave(function(){  
        $("p").css("background-color", "yellow");  
    });  
});  
</script>  
</head>  
<body>  
<p>Move your mouse cursor over this statement.</p>  
</body>  
</html>  


jQuery mouseleave()

The mouseleave() method adds an event handler function to an HTML element. This function is executed, when the mouse pointer leaves the HTML element.

When your mouse cursor leaves the selected element, it triggers the mouseleave event and once the mouseleave event is occurred, it executes the mouseleave() method attached with the event handler function to run.

This event is generally used together with mouseenter() event.

Syntax:

    $(selector).mouseleave()  

It triggers the mouseleave event for selected elements.

    $(selector).mouseleave(function)  


<html>    
<head>    
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>    
<script>    
$(document).ready(function(){    
    $("#h1").mouseleave(function(){    
       $( "div" ).text( "Bye Bye... leaving heading" ).show().fadeOut( 2000 );   
    });    
});    
</script>    
</head>    
<body>    
<h1 id="h1">Enter this heading.</h1>   
<div></div>   
</body>    
</html>    


<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("p").mouseenter(function(){  
        $("p").css("background-color", "red");  
    });  
    $("p").mouseleave(function(){  
        $("p").css("background-color", "blue");  
    });  
});  
</script>  
</head>  
<body>  
<p>Move your mouse cursor over this statement.</p>  
</body>  
</html>  
    

jQuery hover()

The jQuery hover() method executes two functions when you roam the mouse pointer over the selected element. The hover() method triggers both the mouseenter and mouseleave events.

Syntax:

    $(selector).hover(inFunction,outFunction)   


InFunction	It is a mandatory parameter. It is executed the function when mouseenter event occurs.
OutFunction	It is an optional parameter. It is executed the function when mouseleave event occurs. 

<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("p").hover(function(){  
        $(this).css("background-color", "violet");  
        }, function(){  
        $(this).css("background-color", "green");  
    });  
});  
</script>  
</head>  
<body>  
<p>Hover your mouse pointer on me!</p>  
</body>  
</html>  


<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>hover demo</title>  
  <style>  
  ul {  
    margin-left: 20px;  
    color: black;  
  }  
  li {  
    cursor: default;  
  }  
  span {  
    color: red;  
  }  
  </style>  
  <script src="jquery-3.5.1.min.js"></script>  
</head>  
<body>  
<ul>  
  <li>Java</li>  
  <li>SQL</li>  
  <li class="fade">Android</li>  
  <li class="fade">php</li>  
</ul>  
<script>  
$( "li" ).hover(  
  function() {  
    $( this ).append( $( "<span> ***</span>" ) );  
  }, function() {  
    $( this ).find( "span:last" ).remove();  
  }  
);  
$( "li.fade" ).hover(function() {  
  $( this ).fadeOut( 100 );  
  $( this ).fadeIn( 500 );  
});  
</script>  
</body>  
</html>  


jQuery mousedown()

The mousedown() method adds an event handler function to an HTML element. This function is executed, when the left mouse button is pressed down, at the time while the mouse is over the HTML element.

This event is generally used together with mouseup() event.

Syntax:

    $(selector).mousedown()  

It triggers the mousedown event for selected elements.

    $(selector).mousedown(function)  


<html>    
<head>    
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>    
<script>    
$(document).ready(function(){    
    $("#h1").mousedown(function(){    
       $( "div" ).text( "mouse down event triggered" ).show().fadeOut( 2000 );   
    });    
});    
</script>    
</head>    
<body>    
<h1 id="h1">Enter this heading.</h1>   
<div></div>   
</body>    
</html>    

<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("p").mousedown(function(){  
        $("p").css("background-color", "blue");  
    });  
    $("p").mouseup(function(){  
        $("p").css("background-color", "lightyellow");  
    });  
});  
</script>  
</head>  
<body>  
<p>Press down the mouse left button over this p element</p>  
</body>  
</html>  


jQuery mouseup()

The mouseup() method adds an event handler function to an HTML element. This function is executed, when the left mouse button is released after pressing mouse button on the HTML element.

The mouseup () event occurs when you release the pressed button of your mouse over a selected element. Once the mouseup() event is occurred it executes the mouseup() method attached with a function to run.

This event is generally used together with mousedown() event.

Syntax:

    $(selector).mouseup()  

It triggers the mouseup event for selected elements.

    $(selector).mouseup(function)  


<html>    
<head>    
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>    
<script>    
$(document).ready(function(){    
    $("#h1").mouseup(function(){    
       $( "div" ).text( "Bye Bye... mouse up event triggered" ).show().fadeOut( 2000 );   
    });    
});    
</script>    
</head>    
<body>    
<h1 id="h1">Enter this heading.</h1>   
<div></div>   
</body>    
</html>    


<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("p").mousedown(function(){  
        $("p").css("background-color", "pink");  
    });  
    $("p").mouseup(function(){  
        $("p").css("background-color", "yellowgreen");  
    });  
});  
</script>  
</head>  
<body>  
<p>Press down and release the mouse left button over this div element</p>  
</body>  
</html>  
    

jQuery mouseover()

The mouseover event is occurred when you put your mouse cursor over the selected element .Once the mouseover event is occurred, it executes the mouseover () method or attach a function to run.

This event is generally used with mouseout() event.

Note: Most of the people are confused between mouseenter and mouseover.
Difference between mouseenter() and mouseover()

The mouseenter event is only triggered if the mouse pointer enters the selected element whereas the mouseover event triggers if the mouse cursor enters any child elements as well as the selected element.

Syntax:

    $(selector).mouseover()  

It triggers the mouseover event for selected elements.

    $(selector).mouseover(function)  

<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("p").mouseover(function(){  
        $("p").css("background-color", "lightgreen");  
    });  
    $("p").mouseout(function(){  
        $("p").css("background-color", "orange");  
      });  
});  
</script>  
</head>  
<body>  
<p>Move your cursor over this paragraph.</p>  
</body>  
</html>  

<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>mouseover demo</title>  
  <style>  
  div.out {  
    width: 40%;  
    height: 120px;  
    margin: 0 15px;  
    background-color: lightgreen;  
  }  
  div.in {  
    width: 60%;  
    height: 60%;  
    background-color: red;  
    margin: 10px auto;  
  }  
  </style>  
  <script src="jquery-3.5.1.min.js"></script>  
</head>  
<body>  
 <div class="out">  
  <span style="padding:20px">move your mouse</span>  
  <div class="in"></div>  
</div>  
<script>  
$( "div.out" )  
  .mouseover(function() {  
    $( this ).find( "span" ).text( "mouse over " );  
  })  
  .mouseout(function() {  
    $( this ).find( "span" ).text( "mouse out " );  
  });  
</script>  
</body>  
</html>  


jQuery mouseout()

The mouseout event is occurred when you remove your mouse cursor from the selected element .Once the mouseout event is occurred, it executes the mouseout() method or attach a function to run.

This event is generally used with mouseover () event.

Note: Most of the people are confused between mouseout and mouseleave.
Difference between mouseleave and mouseout

The mouseleave event is only triggered if the mouse pointer leaves the selected element whereas the mouseout event triggers if the mouse cursor leaves any child elements as well as the selected element.

Syntax:

    $(selector).mouseout()  

It triggers the mouseout event for selected elements.

    $(selector).mouseout(function)  

<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("p").mouseover(function(){  
        $("p").css("background-color", "lightgreen");  
    });  
    $("p").mouseout(function(){  
        $("p").css("background-color", "orange");  
      });  
});  
</script>  
</head>  
<body>  
<p>Move your cursor over this paragraph.</p>  
</body>  
</html>  


<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>mouseover demo</title>  
  <style>  
  div.out {  
    width: 40%;  
    height: 120px;  
    margin: 0 15px;  
    background-color: lightgreen;  
  }  
  div.in {  
    width: 60%;  
    height: 60%;  
    background-color: red;  
    margin: 10px auto;  
  }  
  </style>  
  <script src="jquery-3.5.1.min.js"></script>  
</head>  
<body>  
 <div class="out">  
  <span style="padding:20px">move your mouse</span>  
  <div class="in"></div>  
</div>  
<script>  
$( "div.out" )  
  .mouseover(function() {  
    $( this ).find( "span" ).text( "mouse over " );  
  })  
  .mouseout(function() {  
    $( this ).find( "span" ).text( "mouse out " );  
  });  
</script>  
</body>  
</html>  


jQuery load()

The load () method is used to load a specific element. It attaches an event handler to load event. It was deprecated in jQuery 1.8 version of jQuery library.

The load event occurs when a specific element is loaded. It is generally used with a URL (image, script, frame, iframe), and the window object.

Note: On some browsers, the load event did not trigger if the image is cached.

Syntax:

    $(selector).load(function)  


<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $("img").load(function(){  
        alert("Image loaded.");  
    });  
});  
</script>  
</head>  
<body>  
<img src="good-morning.jpg" alt="good morning">  
<p><b>Note:</b> On some browsers, the load event did not trigger if the image is cached.</p>  
</body>  
</html>   


jQuery unload()

The jQuery unload() method is used to unload a specific element. It attaches an event handler to unload event. The unload event is sent to the window element when the user navigates away from the page. It was deprecated in jQuery 1.8 version of jQuery library.
Ways to trigger unload event

An unload event is triggered if you:

    Click on a link which leads to leave the page.
    Use the forward or back button.
    Type a new URL in the address bar.
    Close the browser window.
    Reload the page.

Syntax:

    $(selector).unload(function)  


<html>  
<head>  
<script src="jquery-3.5.1.min.js"></script>  
<script>  
$(document).ready(function(){  
    $(window).unload(function(){  
        alert("Goodbye!");  
    });  
});  
</script>  
</head>  
<body>  
<p>When you click <a href="http://www.google.com/">this link</a>, or close the window,  
 unload event will be triggered.</p>  
</body>  
</html>  


jQuery delegate()

The delegate () method is used to attach one or more event handlers for specified elements which are the children of selected elements. This method executes a function to run when the event occurs.

The attached event handlers with the delegate () method works for both current and future elements.

Syntax:

    $(selector).delegate(childSelector,event,data,function)   


ChildSelector 	It is a mandatory parameter that is used to specify one or more child elements to attach the event handler.
Event 	It is also a mandatory parameter. It specifies one or more events to attach to the elements. If you use multiple events then they must be separated by space.
Data 	It is optional and specifies additional data to pass along to the function.
Function 	It is executed when the event occurs.

<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>delegate demo</title>  
  <style>  
  p {  
    background: yellow;  
    font-weight: bold;  
    cursor: pointer;  
    padding: 5px;  
  }  
  p.over {  
    background: #ccc;  
  }  
  span {  
    color: red;  
  }  
  </style>  
  <script src="jquery-3.5.1.min.js"></script>  
</head>  
<body>  
<p>This is a single paragraph. Click me for next.</p>  
<script>  
$( "body" ).delegate( "p", "click", function() {  
  $(this ).after( "<p>Click me for another paragraph.</p>" );  
});  
</script>  
</body>  
</html>  
