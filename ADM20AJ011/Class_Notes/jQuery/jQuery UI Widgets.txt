JQuery UI Widgets
=================

1) jQuery UI Accordion
----------------------
jQuery UI Accordian is an expandable and collapsible content holder that is broken into sections.

The Accordion control is used for displaying groups of information that the user can reveal and hide individually. 


Syntax:

$(selector).accordion (options) 
$(selector).accordion ("action", params)

The accordion (options) method specifies that an HTML element and its contents should be treated and managed as accordion menus. The options parameter is an object that specifies the appearance and behavior of the menu involved.

    $(selector, context).accordion({option1: value1, option2: value2..... });  

Example - 1:

<html>  
<head>  
<link href="jquery-ui.min.css" rel="stylesheet">  
<script src="jquery-1.12.4.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>

<style>
p
{
 font-family:verdana;
 font-size:18px;
 text-align:justify;
 line-height:2;
}
#java
{
  width:650px;
}
#java h3
{
 font-family:verdana;
 font-size:25px;
 /*background-color:maroon;*/
}
</style>

<script>
$(function() 
{  
 $("#java").accordion(); 

 /*$("#java").draggable();
 $("#java").resizable();*/
});  
</script>  
</head>  
<body>  
<div id="java">  
<h3>What is Java?</h3>  
<div>  
<p>Java is a simple, object oriented, 
concurrent and general purpose programming language.Some other important features of java are 
robust, secure, portable, interactive and high performance.  Java was developed by Sun Microsystems in 1995 since then it has become very popular due to its feature like platform independent and robust in the case of memory management.  
</p>    
</div>  

<h3>Why is it called platform?</h3>  
<div>  
<p>  
Because java has its own run time environment (JRE) and API so it is called platform.  
</p>  
</div>  

<h3>Where is it used?</h3>  
<div>  
<p>According to Sun Microsystems, nearly 3 billion devices run java. Some of these devices are mobile phones, games, robotics, application in banking sector etc.  
</p>  
</div>  

</div>  
</body>  
</html>  



Example - 2

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>

<style>
p
{
 font-family:verdana;
 font-size:18px;
 text-align:justify;
 line-height:2;
}
#java
{
  width:650px;
}
#java h3
{
 font-family:verdana;
 font-size:25px;
}
</style>

<script>  
$(function(){  
$("#java").accordion();  

$("input").each(function() 
{  
 $(this).change(function() 
 {  
  if($(this).attr("id")=="disableaccordion") 
  {  
    $("#java").accordion("option","disabled",true);  
  } 
  else 
  {  
    $("#java").accordion("option","disabled", false);  
  }  
});  
});  
});  
</script>  
<style>  
#java
{
font-size: 14px;
}  
</style>  
</head>  
<body>  
<div id="java">  
<h3>What is Java?</h3>  
<div>  
<p>  
Java is a simple, object oriented, concurrent and general purpose programming language. Some other important features of java are 
robust, secure, portable, interactive and high performance. Java was developed by Sun Microsystems in 1995 since then it has become very popular due to its feature  like platform independent and robust in the case of memory management. </p>  
</div>  

<h3>Why is it called Platform?</h3>  
<div>  
<p>  
Because java has its own run time environment (JRE) and API so it is called platform.    
</p>  
</div>  

<h3>Where is it used?</h3>  
<div>  
<p>  
According to Sun Microsystems, nearly 3 
billion devices run java. Some of these devices are mobile phones, games, robotics,application in banking sector etc.     
</p>  
</div>  
</div>  

<div style="margin-top:30px">  
<input type="radio" name="disable" id="disableaccordion" value="disable"> Disable Accordion  

<input type="radio" name="disable" id="enableaccordion" checked value="enable"> Enable Accordion </div>  
</body>  
</html>  



2) jQuery UI Autocomplete
-------------------------
The autocomplete control provides suggestions to the user as they enter data into a field. This can be used to speed up data entry, guide the user toward entering a set of known default values, etc.

The list of suggestions can come from an array, a URL, or a function that you supply that can retrieve the data from wherever your application desires.


    $(selector).autocomplete (options) 
    $(selector).autocomplete ("action", params)

    $(selector, context).autocomplete({option1: value1, option2: value2..... });  


Example - 1:

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>

<style>
p
{
 font-family:verdana;
 font-size:25px;
}
</style>

<script>
$(function() 
{  
var courses=["Android","ASP","ASP.NET", "BASIC", "C", "C++", "Clojure","COBOL", "ColdFusion", "Erlang", "Fortran", "Groovy", "Haskell", "Java","IPhone", "SQL", "JavaScript", "Lisp", "Perl", "PHP",  "Python",  "Ruby", "Scala",  "Scheme"  ];  

$("#cour").autocomplete(
{  
  source: courses
});  
});  
</script>  
</head>  
<body>  
<div class="ui-widget">  
<p>Available Courses: 
<input id="cour">  </p>
</div>  
</body>  
</html>  

Example - 2: to demonstarte the usage of option autoFocus in the autocomplete method. 


<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>

<style>
p
{
 font-family:verdana;
 font-size:25px;
}
</style>

<script>
$(function() 
{  
var courses=["ActionScript", "AppleScript", "ASP", "BASIC", "C", "C++", "Clojure", "COBOL", "ColdFusion", "Erlang", "Fortran", "Groovy", "Haskell", "Java", "JavaScript", "Lisp", "Perl", "PHP",  "Python",  "Ruby", "Scala",  "Scheme"  ];  

 $("#cour").autocomplete({  
      source: courses,
      autofocus:true    
 });  
});  
</script>  
</head>  
<body>  
<div class="ui-widget">  
<p>
Available Courses: <input id="cour">  </p>
</div>  
</body>  
</html>  

Example - 3: to demonstrate the usage of two options minLength and delay in jQueryUI autocomplete() method.

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>
<link href="style.css" rel="stylesheet">  

<style>
p
{
 font-family:verdana;
 font-size:25px;
}
</style>

<script>
$(function() 
{  
var courses=["ActionScript", "AppleScript", "ASP", "BASIC", "C", "C++", "Clojure", "COBOL", "ColdFusion", "Erlang", "Fortran", "Groovy", "Haskell", "Java", "JavaScript", "Lisp", "Perl", "PHP",  "Python",  "Ruby", "Scala",  "Scheme"  ];  

 $("#cour").autocomplete({  
      source: courses,
      minLength:2,     
      delay:2000    
 });  
});  
</script>  
</head>  
<body>  
<div class="ui-widget">  
<p>
Available Courses: <input id="cour">  </p>
</div>  
</body>  
</html>  

Example - 4: 

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>  

<style>
p
{
 font-family:verdana;
 font-size:25px;
}
</style>

<script>  
$(function() 
{  
$("#country").autocomplete({  
source:[
{label:"India", value:"IND"},  
{label:"America", value:"USA"},  
{label:"Pakistan", value:"PAK"},  
{label:"Iceland", value:"ICE"},  
{label:"Australia", value:"AUS"}
]  
});  
});  
</script>  
</head>  
<body>  
<div class="ui-widget">  
<p>Country Name : <input id="country">  
</div>  
</body>  
</html>  



3) jQuery UI Button
-------------------
jQuery UI button() method is used to transform the HTML elements (like buttons, inputs and anchors etc.)  into themeable buttons, with automatic management of mouse movements on them. 

<html>
<head>
<script src="jquery-1.11.3.min.js">
</script>
<script src="jquery-ui.min.js">
</script>
<link href="jquery-ui.css" type="text/css" rel="stylesheet">

<style type="text/css">
body,input
{
  font-family: verdana;
  font-size: 25px;
}
</style>
</head>

<body>

<div id="PaymentMode">
<input type="radio" id="radio1" name="payment">
<label for="radio1">Debit Card</label>

<input type="radio" id="radio2" name="payment" checked>
<label for="radio2">Credit Card</label>

<input type="radio" id="radio3" name="payment">
<label for="radio3">Net Banking</label>
</div>
<br><br>
<a id="google" href="http://www.google.com" target="_blank">An anchor-Google</a>  

<script type="text/javascript">
 $("#PaymentMode").buttonset();
 $("#google").button();
</script>

</body>
</html>

Example - 1: 

<html>
<head>
<script src="jquery-1.11.3.min.js">
</script>
<script src="jquery-ui.min.js">
</script>

<link href="jquery-ui.css" type="text/css" rel="stylesheet">

<style type="text/css">
body, input
{
  font-family: verdana;
  font-size: 25px;
}
</style>
</head>

<body>

<div id="PaymentMode">
<input type="radio" id="radio1" name="payment">
<label for="radio1">Debit Card</label>

<input type="radio" id="radio2" name="payment" checked>
<label for="radio2">Credit Card</label>

<input type="radio" id="radio3" name="payment">
<label for="radio3">Net Banking</label>
</div>

<script type="text/javascript">
 $("#PaymentMode").buttonset();
</script>

</body>
</html>

Example - 2 : to demonstrate the functionality of button widget, passing no parameter to the button() method. 

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"> </script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
$("#button-1,#button-2,#button-3,#button-4").button();

$("#button-5").buttonset();  
});  
</script>  
</head>  

<body>  
<button id="button-1">Button - 1 </button>  

<input id="button-2" type="submit" value="SUBMIT">  

<a id="button-3" href="http://www.google.com" target="_blank">An anchor-Google</a>  

<input type="checkbox"  id="button-4" > 
<label for="button-4">Select</label>  
<br><br>  

<div id="button-5">  
<input type="checkbox" id="check1">  
<label for="check1">Left</label>  

<input type="checkbox" id="check2">  
<label for="check2">Middle</label>  

<input type="checkbox" id="check3">  
<label for="check3">Right</label>  
</div>  
</body>  
</html>  

Example - 3 : to demonstrate the usage of options icons, text and disabled in the button function of jQueryUI.

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
<script>  
$(function() 
{  
$("#button-6").button({  
 icons: {primary: "ui-icon-locked" },  
 text: false  
});

$("#button-7").button({  
   disabled:true  
});

$("#button-8").button({  
icons: 
{  
primary: "ui-icon-gear",  
secondary: "ui-icon-triangle-1-s"  
}  
});  
});  
</script>  
</head>  
<body>  
<button id="button-6">  
Button with icon only  </button>  

<button id="button-7">  
Button Disabled  </button>  

<button id="button-8"> 
Button with two icons </button>  
</body>  
</html>  

Example - 4: to demonstrate the use of destroy () and disable () methods.

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  

<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  

<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
$("#button-9").button({  
text: false,  
icons: {  
primary: "ui-icon-seek-start"  
}  
});  

$("#button-9").button('destroy');  

$("#button-10").button({  
icons: {  
primary: "ui-icon-seek-prev"  
}  
});  

$("#button-10").button('disable');  

$("#button-11").button({  
text: false,  
icons: {  
primary: "ui-icon-play"  
}  
});  
});  
</script>  
</head>  
<body>  
<button id="button-9">  
I'm destroyed  
</button>  
<button id="button-10">     
I'm disabled  
</button>  
<button id="button-11">  
play  
</button>  
</body>  
</html>  

4) jQuery UI Datepicker
-----------------------
The jQuery UI datepicker() method creates a datepicker and changes the appearance of HTML element on the pages by adding new CSS classes. 

 
dateFormat 	This option specifies the date format to be used. By default its value is mm/dd/yy.

firstday 	This option specifies which day is considered the first day of the week, and will be displayed as the left-most column. By default its value is 0.

showButtonPanel 	This option if set to true, a button panel at the bottom of the datepicker is displayed, containing current and close buttons. The caption of these buttons can be provided via the currentText and closeText options. By default its value is false.

currentText 	This option specifies the text to replace the default caption of today for the current button. This is used if the button panel is displayed via the showButtonPanel option. By default its value is today.

closeText 	This option specifies the text to replace the default caption of done for the close button. It is used when the button panel is displayed via the showbuttonpanel option. By default its value is "done"

constrainInput 	This option if set true (the default), text entry into the <input> element is constrained to characters allowed by the current dateformat option. By default its value is true.

defaultDate 	This option sets the initial date for the control, overriding the default value of today, if the <input> element has no value. This can be a date instance, the number of days from today, or a string specifying an absolute or relative date. By default its value is null.

minDate 	This option sets the minimum selectable date for the control. This can be a date instance, the number of days from today, or a string specifying an absolute or relative date. By default its value is null.

maxDate 	This option sets the maximum selectable date for the control. This can be a date instance, the number of days from today, or a string specifying an absolute or relative date. By default its value is null.

changeMonth 	This option if set to true, a month dropdown is displayed, allowing the user to directly change the month without using the arrow buttons to step through them. By default its value is false.

changeYear 	This option if set to true, a year dropdown is displayed, allowing the user to directly change the year without using the arrow buttons to step through them. The option yearRange can be used to control which years are made available for selection. By default its value is false.

numberOfMonths	This option specifies the number of months to show in the datepicker. By default its value is 1.

beforeShowDay 	This option is a callback function which takes a date as parameter, that?s invoked for each day in the datepicker just before it?s displayed, with the date passed as the only parameter. This can be used to override some of the default behavior of the day elements. This function must return a three-element array. By default its value is null.

showOn 	This option specifies when the datepicker should appear. The possible values are focus, button or both. by default its value is focus.

buttonImage 	This option specifies the path to an image to be displayed on the button enabled by setting the showOn option to one of buttons or both. If buttonText is also provided, the button text becomes the alt attribute of the button. By default its value is "".

buttonImageOnly	This option if set to true, specifies that the image specified by buttonImage is to appear standalone (not on a button). The showOn option must still be set to one of button or both for the image to appear. By default its value is false.

buttonText 	This option specifies the caption for the button enabled by setting the showOn option to one of button or both. By default its value is "...".

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  

<script src="jquery-1.11.3.min.js"></script>  

<script src="jquery-ui.min.js"></script>  
  
<script>  
$(function() 
{  
 //$("#dob").datepicker();

 $("#dob").datepicker(
 {
  appendText:"(DD-MM-YY)", 
  dateFormat:"dd-mm-yy",  
  firstDay: 0, //Sunday
  showButtonPanel: true,
  currentText: "Today",
  closeText: "Close",
  constrainInput: true,
  changeMonth: true,
  changeYear: true,
  numberOfMonths: 1,
  showOn: "button",
  buttonImage: "calendar.gif",
  buttonImageOnly: true,
  buttonText: "Select date"
 }); 
});  
</script>  
</head>  
<body>  
<p>Enter Date of Birth: 
<input type="text" id="dob"> </p>  
</body>  
</html>  



Example - 1 : 

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  

<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  

<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
  
<script>  
$(function() 
{  
 $("#dob").datepicker();  
});  
</script>  
</head>  
<body>  
<p>Enter Date of Birth: 
<input type="text" id="dob"> </p>  
</body>  
</html>  


Example - 2 : to demonstrate inline datepicker.

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() {  
$( "#datepicker-2" ).datepicker();  
});  
</script>  
</head>  
<body>  
Enter Date: <div id="datepicker-2"></div>  
</body>  
</html>  

Example - 3 : to demonstrate the usage of options, appendText, dateFormat, altField and altFormat in jQueryUI datepicker() method.

<html>  
<head> 
<style>
*
{
 font-family:verdana;
 font-size:25px;
}
</style>

<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
$("#datepicker-3").datepicker({  
 appendText:"(yy-mm-dd)", 
 dateFormat:"yy-mm-dd",  
 altField: "#datepicker-4",  
 altFormat: "DD, d MM, yy"
});  
});  
</script>  
</head>  
<body>  

<p>Enter Date: <input type="text" id="datepicker-3"></p>  
<p>Alternate Date: <input type=text id="datepicker-4"> </p>  
</body>  
</html>  

Example - 4 : to demonstrate the usage of showWeek, yearSuffix and showAnim in the datepicker function of jQueryUI.

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"></script>  
<script src="jquery-ui.min.js"></script> 

<script>  
$(function() 
{  
$("#datepicker-11").datepicker(
{  
 showWeek:true,  
 yearSuffix:"-CE",  
 showAnim: "explode"  
});  
});  
</script>  
</head>  
<body>  
<p>Enter Date: <input type="text" id="datepicker-11"></p>  
</body>  
</html>  


Example - 5 : using setDate() action

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() {  
$( "#datepicker-12" ).datepicker();  
$( "#datepicker-12" ).datepicker("setDate", "10w+1");  
});  
</script>  
</head>  
<body>  
<p>Enter Date: <input type="text" id="datepicker-12"></p>  
</body>  
</html>  


DatePicker.html
----------------------

<!DOCTYPE html>
<html>
<head>
<title>jQuery UI Datepicker Control</title>
<link rel="stylesheet" href="style.css"/>
<link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
<script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
<script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

<script type="text/javascript">
$("document").ready(function() 
{
$("#datepick1").datepicker({
firstDay: 1,
showButtonPanel: true,
currentText: "Today",
closeText: "Close",
                
constrainInput: true,
                
defaultDate: 3,
                
minDate: 0,
maxDate: "+3M",

changeMonth: true,
changeYear: true,

numberOfMonths: 1,
                
beforeShowDay: onBeforeShowDay
});

function onBeforeShowDay(theDate) 
{
// Day 0 is Sunday, 6 is Saturday
if (theDate.getDay() == 0 || theDate.getDay() == 6) 
return [false, "", "Weekends disabled"];
return [true, ""];
}
});
    </script>
</head>
<body>
<form>
<h1>Using the Datepicker Widget</h1>
<p>The Datepicker control provides a large number of configurable options for working with dates. </p>
<p>Datepicker controls can be attached to input elements (for a pop-up experience) or directly to a container element in the page, such as a &lt;div&gt; element for an inline experience. They can also be triggered by clicking on a button element that you provide.</p>
<div>
<h3>Datepicker attached to input field:</h3>
Select a date: <input type="text" id="datepick1" />
<!-- <div id="datepick1"></div> -->
</div>
</form>
</body>
</html>


5) jQuery UI Dialog
---------------------------
The jQuery UI dialog method is used to create a basic dialog window. It has a title bar and a content area, and can be moved, resized and closed with the 'x' icon by default. 


maxheight 	This option sets maximum height, in pixels, to which the dialog box can be resized. By default its value is false.

maxwidth 	This option sets the maximum width to which the dialog can be resized, in pixels. By default its value is false.

minheight 	This option is the minimum height, in pixels, to which the dialog box can be resized. By default its value is 150.

minwidth 	This option is the minimum width, in pixels, to which the dialog box can be resized. By default its value is 150.

Example - 1 : 

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js">
</script>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
 background:#b9cd6d;  
 border: 1px solid #b9cd6d;  
 color: #FFFFFF;  
 font-weight: bold; 
}
</style>  

<script>  
$(function() 
{  
$("#div").dialog(
{  
 autoOpen: false    
});  
$("#opener").click(function() 
{  
$("#div").dialog("open");  
});  
});  
</script>  
</head>  
<body>  

<div id="div" title="Java">"Java is a language used for developing platform independent applications" 
</div>  
<br>
<button id="opener">Open Dialog</button>  
</body>  
</html>  



<html>  
<head>  
<link 
href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js">
</script>  

<script>  
$(function() 
{  
/*
$("#div").dialog(
{  
 autoOpen: false
});
*/
$("#div").dialog(
{  
 autoOpen: false,
 hide: "slide",  
 show : "slide",  
 height: 200,
 width: 600,
 buttons: 
 {  
  OK: function(){
   $(this).dialog("close");
   }  
 },  
 title: "Java",  
 position: {  
  my: "left center",  
  at: "left center"  
 }
 
});  
$("#opener").click(function() 
{  
 $("#div").dialog("open");  
});  
});  
  
</script>  
</head>  
<body>  

<div id="div" title="Java">"Java is a language used for developing platform independent applications" 
</div>  
<br>
<button id="opener">Open Dialog</button>  
</body>  
</html>  



Example - 2 : to demonstrate the usage of three options buttons, title and position in the dialog widget. 

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
background:lightgreen;  
border: 1px solid #b9cd6d;  
color: black;  
font-weight: bold;  
}  
</style>  

<script>  
$(function() 
{  
$("#dialog-2").dialog({  
 autoOpen: false,   
 buttons: 
 {  
  OK: function(){
   $(this).dialog("close");
   }  
 },  
 title: "Java",  
 position: {  
  my: "left center",  
  at: "left center"  
 }  
 });
 
 $("#opener-2").click(function() 
 {  
  $("#dialog-2").dialog("open");  
 });  
});  
</script>  
</head>  
<body>  

<div id="dialog-2" title="Dialog Title goes here...">Java is a language used for developing platform independent applications</div>  
<button id="opener-2">Open Dialog </button>  
</body>  
</html>  

Example - 3: to demonstrate the usage of these options hide, show and height.

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
background: lightyellow;  
border: 1px solid #b9cd6d;  
color: black;  
font-weight: bold;  
}  
</style>  

<script>  
$(function() 
{  
$("#dialog-3").dialog(
{  
  autoOpen: false,   
  hide: "slide",  
  show : "slide",  
  height: 200,
  width: 600
});  
$("#opener-3").click(function() 
{  
  $("#dialog-3").dialog("open");  
});  
});  
</script>  
</head>  
<body>  

<div id="dialog-3" title="This is a title.">This is a dialog.</div>  
<button id="opener-3">Open Dialog </button>  
</body>  
</html> 


Example - 4: to demonstrate the use of isOpen(), open() and close() method.

<html lang="en">  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
background:#b9cd6d;  
border: 1px solid #b9cd6d;  
color: #FFFFFF;  
font-weight: bold;  
}  
</style>  

<script type="text/javascript">  
$(function()
{  
$("#toggle").click(function() 
{  
($("#dialog-5").dialog("isOpen")==false)? $("#dialog-5").dialog("open") : $("#dialog-5").dialog("close") ;  
});  
$("#dialog-5").dialog(
{
  autoOpen: false
 });  
});  
</script>  
</head>  
<body>  
<button id="toggle">Toggle dialog!
</button>  
<div id="dialog-5" title="Dialog Title!">Click on the Toggle button to open and cose this dialog box.  
</div>  
</body>  
</html>  

DialogTest.html
----------------------

<!DOCTYPE html>
<html>
<head>
<title>jQuery UI Autocomplete Control</title>
<link rel="stylesheet" href="style.css"/>
<link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
<script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
<script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

<script type="text/javascript">
$("document").ready(function() 
{
$("#dialog1").dialog(
{
 autoOpen: false
});
$("#openDlg1").click(function() 
{
$("#dialog1").dialog("open");
});
$("#dialog2").dialog(
{
autoOpen: false,
buttons: [{
text: "Cancel",click: function () {
$(this).dialog("close");
}
},
{
text: "OK",
click: function () {
$(this).dialog("close");
}
}
]
});

$("#openDlg2").click(function() 
{
$("#dialog2").dialog("open");
});

$("#dialog3").dialog(
{
autoOpen: false,
closeOnEscape: false,
draggable: false,
modal: true,
buttons: [
{
text: "OK",
click: function () {
$(this).dialog("close");
}
}
]
});
$("#openDlg3").click(function() {
$("#dialog3").dialog("open");
});
});
</script>
</head>
<body>
<h1>Using the Dialog Widget</h1>
<p>Although the HTML standard now includes a specification for a &lt;dialog&gt; element, not all browsers uniformly implement it. jQUeryUI provides a dialog widget that works well across browsers regardless of what their level of support is.</p>
    
<h3>Basic Dialog</h3>
<p>The basic dialog template includes a title bar, close box, and space for content.</p>
<button id="openDlg1">Open Dialog</button>

<h3>Dialog with Controls</h3>
<p>To create buttons for the dialog, use the "buttons" property.</p>
<button id="openDlg2">Open Dialog</button>

<h3>Dialog with Customizations</h3>
<p>Dialogs can be further customized via options - draggable, resizable, modal, etc.</p>
<button id="openDlg3">Open Dialog</button>

<div id="dialog1" title="Dialog Title">
<p>This is the dialog content</p>
</div>
<div id="dialog2" title="Dialog with buttons">
<p>This dialog has button controls</p>
</div>
<div id="dialog3" title="Dialog with options">
<p>This dialog has some different options set</p>
</div>
</body>
</html>


6) jQuery UI Menu
---------------------------
The jQuery UI Menu widget consists of a main menu bar with pop up menus. We can have sub menus also.

 
Following is a list of different options that can be used with this method. 

disabled 	If you set this option to true, it disables the menu. By default its value is false.

icons 	This option sets the icons for submenus. By default its value is { submenu: "ui-icon-carat-1-e" }.

menus 	This option is a selector for the elements that serve as the menu container, including sub-menus. By default its value is ul.

position 	This option sets the position of submenus in relation to the associated parent menu item. By default its value is { my: "left top", at: "right top" }.

role 	This option is used to customize the aria roles used for the menu and menu items. By default its value is menu.

Example - 1 : to demonstrate the menu widget functionality, passing no parameter to the menu() method. 

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.ui-menu 
{  
 width: 200px;  
}  
</style>  

<script>  
$(function() 
{  
 $("#menu-1").menu();  
});  
</script>  
</head>  
<body>  

<ul id="menu-1">  
<li><a href="#">C</a></li>  
<li><a href="#">C++</a></li>  
<li><a href="#">Java</a>  
  <ul>  
    <li><a href="http://www.peerstech.com"> Core Java</a></li>  
    <li><a href="#">J2EE</a></li>  
    <li><a href="#">Spring</a></li>     
  </ul>  
</li>  
<li><a href="#">HTML5</a></li>  
</ul>  
</body>  
</html>  

Example - 2 : to demonstrate the usage of two options icons and position in the menu function of jQuery UI.

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.ui-menu 
{  
  width: 200px;  
}  
</style>  

<script>  
$(function() 
{  
 $("#menu-2").menu(
 {  
  icons: 
  { 
   submenu: "ui-icon-circle-triangle-e"
  },  
  position: 
  { 
    my: "right top", 
	at: "right+10 top+25" 
  }  
 });  
});  
</script>  
</head>  
<body>  

<ul id="menu-2">  
<li><a href="#">C</a></li>  
<li><a href="#">C++</a></li>  
<li><a href="#">Java</a>  
  <ul>  
    <li><a href="http://www.peerstech.com">Core Java</a></li>  
    <li><a href="#">J2EE</a></li>  
    <li><a href="#">Spring</a></li>  
    <li><a href="#">Hibernate</a></li>  
    <li><a href="#">Struts</a></li>  
  </ul>  
</li>  
<li><a href="#">JSF</a></li>  
<li><a href="#">HTML5</a></li>  
</ul>  
</body>  
</html>  


 $(selector, context).menu ("action", params);  

Example - 3 : to demonstrate the use of focus and collapse all method. 

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.ui-menu 
{  
 width: 200px;  
}  
</style>  

<script>  
$(function() 
{  
 var menu=$("#menu-4").menu();  
 $("#menu-4").menu("focus", null, $("#menu-4").menu().find( ".ui-menu-item:last" )); 
 
 $(menu).mouseleave(function() 
 {  
  menu.menu('collapseAll');  
 });  
 });  
</script>  
</head>  
<body>  

<ul id="menu-4">  
<li><a href="#">C</a></li>  
<li><a href="#">C++</a></li>  
<li><a href="#">Java</a>  
  <ul>  
    <li><a href="http://www.peerstech.com">Core Java</a></li>  
    <li><a href="#">J2EE</a></li>  
    <li><a href="#">Spring</a></li>  
    <li><a href="#">Hibernate</a></li>  
    <li><a href="#">Struts</a></li>  
  </ul>  
</li>  
<li><a href="#">JSF</a></li>  
<li><a href="#">HTML5</a></li>  
</ul>  
</body>  
</html>  

7) jQuery UI Progressbar
------------------------------------
Progressbar specifies the completion percentage of an operation or progress. 

The default maximum value of progress bar is 100 which custamizable


Progress bars give the user an idea of how far along a particular process is, and can help give them a sense of how much time is left to perform a particular task. They can also have an "indeterminate" state, which tells the user that there isn't any way to calculate how much time the task will take.


Progress Bar with Label

By placing a positioned element within the progress bar, we can create a label.


Indeterminate Progress Bar

To create an indeterminate progress bar, set the value property to "false". Progress bars are also styled using CSS, so you can override their appearance by using the right jQueryUI CSS class names.


Syntax:

    $(selector, context).progressbar (options) Method  

    $(selector, context).progressbar ("action", params) Method  

$(selector, context).progressbar({option1: value1, option2: value2..... });  

Example - 1: to demonstrate the functionality of progress bar passing no parameter to the progressbar() method.

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"></script>  
<script src="jquery-ui.min.js"></script>  
<style>  
.ui-widget-header 
{  
background: blue;  
border: 1px solid #DDDDDD;  
color: #333333;  
font-weight: bold;  
}  
</style>  

<script>  
$(function() 
{  
$("#progressbar-1").progressbar({  
 value: 55  
});  
});  
</script>  
</head>  
<body>   
<div id="progressbar-1"></div>   
</body>  
</html>  


PrograssBar.html
-------------------------
<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="style.css"/>
<link rel="stylesheet" href="jquery-ui.css"/>
    
<script type="text/javascript" src="jquery-1.11.3.min.js"></script>
<script type="text/javascript" src="jquery-ui.js"></script>

<script type="text/javascript">

$("document").ready(function() 
{
$("#progress1").progressbar(
{
 value: 50
});

$("#progress2").progressbar(
{
value: 20,
complete: function(evt, elem) 
{
 alert("Download complete!");
}
});

$("#btnIncr").click(function() 
{
 var elem= $("#progress2");
 var val=elem.progressbar("value") || 0;
 elem.progressbar("value",val+10);
 return false;
});

$("#progress3").progressbar(
{
 value: false
});
});
</script>
<style>
.prog2Label 
{
position: absolute;
left: 45%;
top:5px
}

#progress3 .ui-progressbar-value 
{
background-color: green;
}
.ui-progressbar-value
{
 background-color: blue;
}
</style>
</head>
<body>
<form>
<h1>Using the Progress Bar Control</h1>
<p>Progress bars give the user an idea of how far along a particular process is, and can help give them a sense of how much time is left to perform a particular task. They can also have 
an "indeterminate" state, which tells the user that there isn't any way to calculate how much time the task will take.</p>

<h3>Basic Progress Bar control</h3>
<p>Progress bars default to a maximum 
value of 100, but that can be customized. </p>
<div id="progress1" class="progressbar"> </div>

<h3>Progress Bar with Label</h3>
<p>By placing a positioned element within the progress bar, we can create a label.</p>
<div id="progress2" class="progressbar"> <div id="prog2Label" class="prog2Label">Downloading...</div></div>
<div>
<button id="btnIncr">Increment</button> </div>
</div>

<h3>Indeterminate Progress Bar</h3>
<p>To create an indeterminate progress bar, set the value property to "false". Progress bars are also styled using CSS, so you can override their appearance by using the right jQueryUI CSS class names.</p>
<div id="progress3" class="progressbar"> </div>
</form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="style.css"/>
<link rel="stylesheet" href="jquery-ui.css"/>
    
<script src="jquery-1.11.3.min.js"> </script>
<script src="jquery-ui.js"></script>

<script type="text/javascript">

$("document").ready(function() 
{
$("#progress1").progressbar(
{
 value: 50
});

$("#progress2").progressbar(
{
 value: 0,
 complete: function(evt, elem) 
 {
  alert("Download complete!");
 }
});

$("#btnIncr").click(function() 
{
 var elem= $("#progress2");
 var val=elem.progressbar("value") || 0;
 elem.progressbar("value",(val+10));
 return false;
});

$("#progress3").progressbar(
{
 value: false
});
});
</script>
<style>
.prog2Label 
{
position: absolute;
left: 45%;
top:5px
}

#progress3 .ui-progressbar-value 
{
 background-color: green;
}
.ui-progressbar-value
{
 background-color: blue;
}
</style>
</head>
<body>
<form>
<h1>Using the Progress Bar Control</h1>

<h3>Basic Progress Bar control</h3>
<div id="progress1" class="progressbar"> </div>

<h3>Progress Bar with Dynamic Value</h3>

<div id="progress2" class="progressbar"> <div id="prog2Label" class="prog2Label"> Downloading...</div></div>
<div>
<button id="btnIncr">Increment</button> </div>
</div>

<h3>Indeterminate Progress Bar</h3>
<div id="progress3" class="progressbar"> </div>
</form>
</body>
</html>

8) jQuery UI Selectmenu
-----------------------------------
jQuery UI Selectmenu is used to extend the functionality of a native HTML select element. It provides the customization functionality in behavior and appearance far beyond the limitation of a native select.

The jQuery UI Selectmenu widget provides a proper replacement of select element and act as a proxy back to the original select element controlling its state for form submission or serialization. 

Example - 1 

<html>  
<head>  
<meta charset="utf-8">  
<meta name="viewport" content="width=device-width, initial-scale=1">  
<title>jQuery UI Selectmenu - Default 
functionality</title>  
<link rel="stylesheet" href="jquery-ui.css">  
<script src="jquery-1.11.3.min.js"></script>  
<script src="jquery-ui.min.js"></script>  
<script>  
$(function() 
{  
$("#speed").selectmenu();  
$("#files").selectmenu();  
$("#number").selectmenu().selectmenu( "menuWidget").addClass( "overflow" );  
});  
</script>  

<style>  
fieldset 
{  
border: 0;  
}  
label 
{  
display: block;  
margin: 30px 0 0 0;  
}  
select 
{  
width: 200px;  
}  
.overflow 
{  
height: 200px;  
}  
</style>  
</head>  
<body>  
<div class="demo">  
<form action="#">  
<fieldset>  
<label for="speed">Select a speed</label>  
<select name="speed" id="speed">  
<option>Slower</option>  
<option>Slow</option>  
<option selected="selected"> Medium</option>  
<option>Fast</option>  
<option>Faster</option>  
</select>  

<label for="files">Select a file</label>  
<select name="files" id="files">  
<optgroup label="Scripts">  
 <option value="jquery">jQuery.js</option> 
 
 <option value="jqueryui">ui.jQuery.js</option>  
</optgroup>  

<optgroup label="Other files">  
 <option value="somefile">Some unknown file</option>  
 <option value="someotherfile">Some other file with a very long option ext</option>        
 </optgroup>  

</select>  

<label for="number">Select a number</label>  
<select name="number" id="number">  
<option>1</option>  
<option selected="selected">2</option> <option>3</option>  
<option>4</option>  
<option>5</option>  
<option>6</option>  
<option>7</option>  
<option>8</option>  
<option>9</option>  
<option>10</option>  
<option>11</option>  
<option>12</option>  
<option>13</option>  
<option>14</option>  
<option>15</option>  
<option>16</option>  
<option>17</option>  
<option>18</option>  
<option>19</option>  
<option>20</option>  
</select>  
</fieldset>  
</form>  
</div>  
</body>  
</html>  

Following is a list of different options that can be used with this method.

appendTo 	It is used to append the menu. Its default value is NULL.

disabled 	If you set this option to true, it disables the Selectmenu. Its default value is FALSE.

icons 	This option is used to specify a button.

position 	It identifies the position of the menu in relation to the associated button element.

width 	It specifies the width of the menu in pixels. Its default value is NULL.

Initialize the Selectmenu with the disabled options specified: 

    $( ".selector" ).selectmenu({  
      disabled: true  
    });   

There are two ways to use the option "disable":

1) Get the disable option:

    var disabled = $( ".selector" ).selectmenu( "option", "disabled" );  

1) Set the disable option:

    $( ".selector" ).selectmenu( "option", "disabled", true );  

Example - 2 : to demonstrate the usage of selectmenu(). 

<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <meta name="viewport" content="width=device-width, initial-scale=1">  
  <title>jQuery UI Selectmenu - Default functionality</title>  
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">  
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>  
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>  
  <link rel="stylesheet" href="/resources/demos/style.css">  
  <script>  
  $(function() {  
    $( "#speed" ).selectmenu();  
  $( "#files" ).selectmenu().selectmenu( "option", "disabled", true );;  
 $( "#number" )  
      .selectmenu()  
      .selectmenu( "menuWidget" )  
        .addClass( "overflow" );  
  });  
  </script>  
  <style>  
    fieldset {  
      border: 0;  
    }  
    label {  
      display: block;  
      margin: 30px 0 0 0;  
    }  
    select {  
      width: 200px;  
    }  
    .overflow {  
      height: 200px;  
    }  
  </style>  
</head>  
<body>  
<div class="demo">  
   
<form action="#">  
  <fieldset>  
    <label for="speed">Select a speed</label>  
    <select name="speed" id="speed">  
      <option>Slower</option>  
      <option>Slow</option>  
      <option selected="selected">Medium</option>  
      <option>Fast</option>  
      <option>Faster</option>  
    </select>  
 <label for="files">Select a file</label>  
    <select name="files" id="files">  
      <optgroup label="Scripts">  
        <option value="jquery">jQuery.js</option>  
        <option value="jqueryui">ui.jQuery.js</option>  
      </optgroup>  
      <optgroup label="Other files">  
        <option value="somefile">Some unknown file</option>  
        <option value="someotherfile">Some other file with a very long option text</option>  
      </optgroup>  
    </select>  
   
    <label for="number">Select a number</label>  
    <select name="number" id="number">  
      <option>1</option>  
      <option selected="selected">2</option>  
      <option>3</option>  
      <option>4</option>  
      <option>5</option>  
      <option>6</option>  
      <option>7</option>  
      <option>8</option>  
      <option>9</option>  
      <option>10</option>  
      <option>11</option>  
      <option>12</option>  
      <option>13</option>  
      <option>14</option>  
      <option>15</option>  
      <option>16</option>  
      <option>17</option>  
      <option>18</option>  
      <option>19</option>  
    </select>  
  </fieldset>  
</form>  
   
</div>  
 </body>  
</html>  

9) jQuery UI Slider
---------------------------
jQuery UI slider is used to obtain a numeric value within a certain range. 

The main advantage of slider over text input is that it becomes impossible for the users to enter an invalid value. Every value they can pick with the slider is valid.

The slider control is typically used to select values along a scale. jQuery UI sliders have a variety of options: they can be free-form, snapped to certain values, bound to specific ranges, and displayed horizontally or vertically.



Syntax:

You can use the slider () method in two forms:

    $(selector, context).slider (options) Method  

    $(selector, context).slider ("action", params) Method  

    $(selector, context).slider({option1: value1, option2: value2..... });  

Following is a list of different options that can be used with this method.

animate 	If you set this option as true, it creates an animated effect when users click directly on the axis. By default its value is false.

disabled 	If you set this option as true, it disables the slider. By default its value is false.

max 	This option is used to specify the upper value of the range that the slider can attain?the value represented when the handle is moved to the far right (for horizontal sliders) or top (for vertical sliders). By default its value is 100.

min 	This option is used to specify the lower value of the range that the slider can attain?the value represented when the handle is moved to the far left (for horizontal sliders) or bottom (for vertical sliders). By default its value is 0.

orientation 	This option specifies the horizontal or vertical orientation of the slider. By default its value is horizontal.

range 	This option indicates whether the slider represents a range. By default its value is false.

step 	This option is used to specify discrete intervals between the minimum and maximum values that the slider is allowed to represent. By default its value is 1.

value 	This option is used to specify the initial value of a single-handle slider. In the case of multiple handles (see the values options), it specifies the value for the first handle. By default its value is 1.

values 	This option is of type array and causes multiple handles to be created and specifies the initial values for those handles. This option should be an array of possible values, one for each handle. By default its value is null.

Example - 1 : to demonstrate the slider functionality, passing no parameters to the slider() method. 

<html>  
<head>
<link rel="stylesheet" href="jquery-ui.css">  
<script src="jquery-1.11.3.min.js"></script>  
<script src="jquery-ui.min.js"></script>


<script>  
$(function() 
{  
$("#slider-1").slider();  
});  
</script>  
</head>  
<body>  

<div id="slider-1"></div>  
</body>  
</html>  

Example - 2 : to demonstrate the usage of options value, animate and orientation in the slider function of jQueryUI. 

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  

<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
 $("#slider-2").slider(
 {  
  value: 60,  
  animate:"slow",  
  orientation: "horizontal"  
 });  
});  
</script>  
</head>  
<body>  

<div id="slider-2"></div>  
</body>  
</html>  

Example - 3 : shows the usage of options range, min, max, and values in the slider function of jQueryUI. 

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
 $("#slider-3").slider(
 {  
  range:true,  
  min: 0,  
  max: 500,  
  values: [50,300],  
  slide: function(event,ui) 
  {  
   $("#price").val("Rs: "+ui.values[0]+" - Rs: "+ui.values[1]);  
  }  
 });  
 $("#price").val("Rs: "+ $("#slider-3").slider("values",0)+" - Rs: "+ $("#slider-3").slider("values",1));  
 });  
 </script>  
 </head>  
 <body>  
 
 <p>  
 <label for="price">Price range:</label>  
 <input type="text" id="price" style="border:0; color:red; font-family:verdana;font-size:25px;">  
</p>  
<div id="slider-3"></div>  
</body>  
</html>  

Example - 4 : 

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI Slider functionality</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- Javascript -->  
      <script>  
         $(function() {  
            $( "#slider-4" ).slider({  
               orientation:"horizontal"   
            });  
            $( "#slider-4" ).slider('disable');  
            $( "#slider-5" ).slider({  
               orientation:"horizontal",  
               value:50,  
               slide: function( event, ui ) {  
                  $( "#minval" ).val( ui.value );  
               }      
            });  
            $( "#minval" ).val( $( "#slider-5" ).slider( "value" ) );  
         });  
      </script>  
   </head>  
   <body>  
      <!-- HTML -->   
         <div id="slider-4"></div>  
         <p>  
            <label for="minval">Minumum value:</label>  
            <input type="text" id="minval"   
               style="border:0; color:red; font-weight:bold;">  
         </p>  
         <div id="slider-5"></div>  
   </body>  
</html>  


Slider1.html
-----------------
<html>  
<head> 
<style>
#price
{
 font-family:verdana;
 font-size:25px;
 font-weight:bold;
}
</style>

<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  

<script 
src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
 $("#slider-1").slider(
 {  
  value: 0,  
  animate:"slow",  
  orientation: "horizontal",  
  slide: function(event,ui) 
  {  
   $("#price").text(ui.value);  
  }  
 });  
});  
</script>  
</head>  
<body>  

<div id="slider-1"></div> 
<span id="price"></span>
</body>  
</html>  


Slider.html
---------------
<!DOCTYPE html>
<html>
<head>
    <title>jQuery UI Slider Control</title>
    <link rel="stylesheet" href="style.css"/>
    <link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
    <script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
    <script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

    <script type="text/javascript">
        $("document").ready(function() {
            $("#sliderCtrl1").slider({
                animate: "fast"
            });

            $("#sliderCtrl2").slider({
                value: 75,
                min: 0,
                max: 200,
                step: 25,
                slide: function(evt, elem) {
                    $("#amt").text(elem.value);
                },
                start: function(evt, elem) {
                    $("#amt").addClass("heavytext")
                },
                stop: function(evt, elem) {
                    $("#amt").removeClass("heavytext")
                }
            });            
            $("#amt").text($("#sliderCtrl2").slider("value"));
            
            $("#sliderCtrl3").slider({
                range: true,
                min: 500,
                max: 5000,
                values: [1500, 3000],
                slide: function(evt, elem) {
                    $("#sl3Val1").text(elem.values[0]);
                    $("#sl3Val2").text(elem.values[1]);
                }
            });
            $("#sl3Val1").text($("#sliderCtrl3").slider("values", 0));
            $("#sl3Val2").text($("#sliderCtrl3").slider("values", 1));
        });
    </script>
    <style>
        .heavytext {
            font-weight: bold;
            color: red;
        }
        .sliderClass {
            width: 400px;
        }
    </style>
</head>
<body>
    <h1>Using the Slider Control</h1>
    <p>The slider control is typically used to select values along a scale. jQuery UI sliders have a variety of options: they can be free-form, snapped to certain values, bound to specific ranges, and displayed horizontally or vertically.</p>
    <h3>Basic Slider Control</h3>
    <p>Slider value: <span id="sl1Val"></span></p>
    <div id="sliderCtrl1" class="sliderClass"></div>
    <h3>Slider Control with Snapping Behavior</h3>
    <p>This slider control snaps to specific value increments. It also attaches event handlers to detect value changes to update a text field, and to change the style of the field when the sliding starts and stops.</p>
    <p>Please enter your donation: $<span id="amt"></span></p>
    <div id="sliderCtrl2" class="sliderClass"></div>
    <h3>Range Slider - select and upper and lower value</h3>
    <p>Sliders controls can be used to select ranges of values.</p>
    <p>Select a rent range: $<span id="sl3Val1"></span> to $<span id="sl3Val2"></span></p>
    <div id="sliderCtrl3" class="sliderClass"></div>
</body>
</html>


10) jQuery UI spinner
------------------------------
Spinner controls provide an easy way to select numerical values.

jQuery UI spinner widgets are used to add a up/down arrow to the input box thus allowing the user to increase and decrease the value in the input box. 

It facilitates the users to type a value directly, or modify an existing value by spinning with the keyboard, mouse or scrollwheel.

Spinner controls provide an easy way to select numerical values.

Note: the spinner control is not compatible with the standard HTML5 "number" input tag, due to the conflict that would result with the browser's built-in spinner controls.


It has also some extended features like:

    It facilitates you to skip values.
    It also enables globalized formatting options (i.e. currency, decimals, thousand separators etc.)

    $(selector, context).spinner (options) Method  

    $(selector, context).spinner ("action", params) Method  

    $(selector, context).spinner ({option1: value1, option2: value2.....});  

Following is a list of different options that can be used with this method:

culture 	This option sets the culture to use for parsing and formatting the value. By default its value is null which means the currently set culture in globalize is used.
disabled 	If you set this option to true, it disables spinner. By default its value is false.
icons 	This option is used to set icons to use for buttons, matching an icon provided by the jQueryUI CSS framework. By default its value is { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" } .
incremental 	This option controls the number of steps taken when holding down a spin button. By default its value is true.
max 	This option is used to identify the maximum allowed value. By default its value is null which means there is no maximum enforced.
min 	This option is used to identify the minimum allowed value. By default its value is null which means there is no minimum enforced.
numberFormat 	This option specifies a format of numbers passed to globalize, if available. Most common are "n" for a decimal number and "c" for a currency value. By default its value is null.
page 	This option indicates the number of steps to take when paging via the pageup/pagedown methods. By default its value is 10.
step 	This option specifies the size of the step to take when spinning via buttons or via the stepup()/stepdown() methods. The element's step attribute is used if it exists and the option is not explicitly set.


Spinner1.html

<html>  
<head> 
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  

<script 
src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script type="text/javascript">
$("document").ready(function() 
{
$("#sc1").spinner();
$("#sc1").spinner("value", 1);


$("#sc2").spinner(
{
 min: 0,
 max: 500,
 step: 10,
 page: 10,
 spin: function(evt, elem) 
 {
  if (evt.metaKey)
  return false;
 }
});

$("#sc2").spinner("value", 50);
});
</script>
</head>

<body>
<form>
<h1>Using the Spinner Control</h1>
<p>Spinner controls provide an easy way to select numerical values.</p>
<p><strong>Note:</strong> the spinner 
control is not compatible with the standard HTML5 "number" input tag, due to the conflict that would result with the browser's built-in spinner controls.</p>
<h3>Basic Spinner control</h3>
<input type="text" id="sc1" />

<h3>Spinner with step and formatting </h3>
<input type="text" id="sc2" readonly/>
</form>
</body>
</html>


Example - 1 : to demonstrate spinner widget functionality, passing no parameter to the spinner() method. 

<html lang="en">  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style type="text/css">  
#spinner-1 input
{
width: 100px
}  
</style>  

<script>  
$(function() 
{  
$("#spinner-1").spinner();  
});  
</script>  
</head>  
<body>  

<div id="example">  
<input type="text" id="spinner-1" 
value="0" />  
</div>  
</body>  
</html>  


Example - 2 : to demonstrate the usage of options min, max and step in the spinner widget of jQueryUI. 

<html lang="en">  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style type="text/css">  
#spinner-2,#spinner-3 input 
{
width: 100px
}  
</style>  

<script>  
$(function() 
{  
$("#spinner-2").spinner(
{  
 min: -50,   
 max: 50  
});

$('#spinner-3').spinner(
{  
 step: 1000,   
 min: -1000000,   
 max: 1000000  
 });  
});  
</script>  
</head>  

<body>  
   
<div id="example">  
Spinner Min, Max value set:  
<input type="text" id="spinner-2" value="0" /><br><br>  

Spinner increments/decrements in step of of 1000:  
<input type="text" id="spinner-3" value="0" />  
</div>  
</body>  
</html>  


Example - 3:  to demonstrate the use of stepUp, stepDown, pageUp and pageDown method:

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style type="text/css">  
#spinner-1 input 
{
 width: 100px
}  
</style>  

<script>  
$(function() 
{  
$("#spin").spinner();  
$('button').button();  
  
$('#stepUp').click(function () 
{  
$("#spin").spinner("stepUp");  
});  
  
$('#stepDown').click(function()
{  
$("#spin").spinner("stepDown");  
});  
  
$('#pageUp').click(function() 
{  
$("#spin").spinner("pageUp");  
});  
  
$('#pageDown').click(function() 
{  
$("#spin").spinner("pageDown");  
});  
});  
</script>  
</head>  
<body>  

<input id="spin" />  
<br/>  
<button id="stepUp">Increment</button>  
<button id="stepDown">Decrement </button>  

<button id="pageUp">Increment Page </button>  

<button id="pageDown">Decrement Page </button>  
</body>  
</html>  

Example - 4 :  to demonstrate the use of action enable and disable:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI Spinner functionality</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style type="text/css">  
         #spinner-7 input {width: 100px}  
      </style>  
      <!-- Javascript -->  
      <script>  
         $(function() {  
            $("#spinner-7").spinner();  
            $('button').button();  
            $('#stepUp-3').click(function () {  
               $("#spinner-7").spinner("enable");  
            });  
            $('#stepDown-3').click(function () {  
               $("#spinner-7").spinner("disable");  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <!-- HTML -->   
      <input id="spinner-7" />  
      <br/>  
      <button id="stepUp-3">Enable</button>  
      <button id="stepDown-3">Disable</button>  
   </body>  
</html>  


Spinner.html
-----------------

<!DOCTYPE html>
<html>
<head>
    <title>jQuery UI Spinner Control</title>
    <link rel="stylesheet" href="style.css"/>
    <link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
    <script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
    <script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

    <script type="text/javascript">
        $("document").ready(function() {
            // instantiate a basic spinner control
            $("#spinCtrl1").spinner();
            $("#spinCtrl1").spinner("value", 1);

            // spinner control with settings for min, max, step, and formatting
            $("#spinCtrl2").spinner({
                min: 0,
                max: 500,
                step: 10,
                page: 10,
                spin: function(evt, elem) {
                    if (evt.metaKey)
                        return false;
                }
            });
            $("#spinCtrl2").spinner("value", 50);
        });
    </script>
</head>
<body>
    <form>
    <h1>Using the Spinner Control</h1>
    <p>Spinner controls provide an easy way to select numerical values.</p>
    <p><strong>Note:</strong> the spinner control is not compatible with the standard HTML5 "number" input tag, due to the conflict that would result with the browser's built-in spinner controls.</p>
    <h3>Basic Spinner control</h3>
    <input type="text" id="spinCtrl1" />
    <h3>Spinner with step and formatting</h3>
    <input type="text" id="spinCtrl2" readonly/>
    </form>
</body>
</html>



11) jQuery UI Tabs
--------------------------
Tabs are the set of logically grouped content that facilitates users to flip between them. Tabs save the space.

Every tab must use the following set of markups to work properly.

    Tabs must be in an ordered <ol> or unordered <ul> list.
    Each tab title must be within each <li> and wrapped by anchor (<a>) tag with a href attribute.
    Each tab panel may be any valid element but it must have an id which corresponds to the hash in the anchor of the associated tab.

jQuery UI tabs() method is used to change the appearance of HTML elements inside the page. This method traverses the HTML code and adds new CSS classes to the element to give them appropriate style.

Syntax:

You can use tabs () method in two forms:

    $(selector, context).tabs (options) Method  

    $(selector, context).tabs ("action", params) Method  

    $(selector, context).tabs({option1: value1, option2: value2..... });  

Following is a list of options that can be used with this method:

active 	This option indicates the current active tab/panel. By default its value is 0.
collapsible 	If you set this option to TRUE, it allows tabs to be deselected. When it is set to false (the default), clicking on a selected tab does not deselect (it remains selected). By default its value is false.
disabled 	This option uses an array to indicate index tabs that are disabled (and therefore cannot be selected). for example, use [0, 1] to disable the first two tabs. By default its value is false.
event 	This option is a name of the event that lets users select a new tab. If, for example, this option is set to "mouseover", passing the mouse over a tab will select it. By default its value is "click".
heightStyle 	This option controls the height of the tabs widget. By default its value is "content".
hide 	This option specifies how to animate hiding of panel. By default its value is null.
show 	This option specifies how to animate showing of panel. By default its value is NULL.

Example 

<html>  
<head>  
<link 
href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
   //$("#course").tabs();

   $("#course").tabs(
   {
     heightStyle:"fill",  
     collapsible:true,  
     hide:"slideUp",
     event:"mouseover"  
   });  
});  
</script>  

</head>  
<body>  
<div id="course">  
<ul>  
<li><a href="#java">Java</a></li>  
<li><a href="#and">Android</a></li>  
<li><a href="#wad">WAD</a></li>  
</ul>  

<div id="java">  
<p>Java Course</p>  
<ol>
<li>Core Java</li>
<li>Advanced Java</li>
<li>Java Frameworks</li>
</div>  

<div id="and">  
<p>Android Course</p>
</div>  

<div id="wad">  
<p>Web Application Development</p>  
</div>  
</div>  
</body>  
</html>  


TabsTest.html
--------------------
<!DOCTYPE html>
<html>
<head>
    <title>jQuery UI Tabs Control</title>
    <link rel="stylesheet" href="style.css"/>
    <link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
    <script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
    <script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

    <script type="text/javascript">
        $("document").ready(function() {
            //$("#tabsCtrl").tabs();
            
            $("#tabsCtrl").tabs({
                heightStyle : "auto",
                collapsible : true
            });
            
            $("#addTab").click(function(evt) {
                newTab = $("<li><a href='#tab5'>Tab 5</li>");
                $("#tabsCtrl").find(".ui-tabs-nav").append(newTab);
                $("#tabsCtrl").append("<div id='tab5'><p>This is the newly added tab</p></div>");
                $("#tabsCtrl").tabs("refresh");
                evt.preventDefault();
            });
        });
    </script>
</head>
<body>
    <form>
    <h1>Using the Tabs Control</h1>
    <p>Tab controls are somewhat similar to the Accordion control in that they display content in a grouped fashion. They are more commonly used to separate entirely different sets of content, however - entire documents or logical content groupings, for example.</p>
    
    <button id="addTab">Add New Tab</button>
        
    <div id="tabsCtrl">
        <ul>
            <li><a href="#tab1">Tab 1</a></li>
            <li><a href="#tab2">Tab 2</a></li>
<!--
            <li><a href="tabs/tab3.html">Tab 3</a></li>
            <li><a href="tabs/tab4.html">Tab 4</a></li>
-->
            <li><a href="#tab3">Tab 3</a></li>
            <li><a href="#tab4">Tab 4</a></li>
        </ul>
        <div id="tab1">
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sit amet ullamcorper nisi. Integer vel tincidunt tortor. Phasellus quis tempor est, ut ultrices tellus. Vestibulum malesuada lacus nec felis rutrum, eget sagittis sem dapibus. Curabitur consectetur pulvinar tincidunt. Aliquam nec scelerisque velit. Aliquam at neque urna. Sed sed vulputate mauris, in vulputate orci. Sed egestas augue rutrum augue ullamcorper, convallis facilisis arcu convallis. In lorem risus, posuere ut interdum auctor, ultricies ut mi.</p>
        </div>
        <div  id="tab2">
            <p>Curabitur magna magna, ultrices feugiat elit non, posuere sagittis orci. Cras finibus enim eu rutrum elementum. Aliquam sapien leo, hendrerit sit amet est molestie, semper rutrum nulla. Aenean lacinia lacus quis tortor posuere eleifend. Phasellus egestas ultricies lorem sit amet porta. Sed vestibulum dolor eget risus viverra, ut laoreet elit tempus. Sed sit amet turpis at risus euismod hendrerit a id ante. Etiam eget scelerisque diam, vitae viverra enim. Nam varius, quam viverra malesuada sagittis, arcu odio sodales metus, id imperdiet massa urna id mauris. Phasellus posuere vestibulum sapien, ut pellentesque lorem fringilla id. Ut a lorem laoreet, tristique arcu porta, vulputate tortor. Vivamus vehicula dapibus varius. Vestibulum at ultrices felis, a ultricies lectus. Nam ac suscipit diam. Pellentesque vel mauris ullamcorper, ullamcorper ex sit amet, egestas justo. Phasellus risus dui, suscipit pellentesque arcu consectetur, auctor blandit arcu.</p>
        </div>
        <div  id="tab3">
            <p>Aenean consequat sollicitudin odio, a vestibulum sapien tempus et. Aliquam velit magna, imperdiet et gravida ac, rhoncus eget ex. Vivamus egestas sapien maximus aliquet malesuada. Fusce sed mattis orci. Praesent tincidunt dui sed eros mattis rutrum. Donec ac sagittis metus, vel feugiat risus. Cras maximus nec massa quis faucibus. Nullam purus nisl, malesuada vitae eleifend volutpat, dapibus in sem. Vivamus sagittis varius lorem ut gravida. Phasellus sed nulla vel ipsum iaculis dignissim. Quisque sit amet auctor nulla. Sed tempus mauris id magna porttitor egestas. In nisl risus, interdum vitae ligula non, sodales faucibus metus.
            </p>
        </div>
        <div  id="tab4">
            <p>Sed tincidunt ut dui at consectetur. Ut dapibus metus dolor, et pulvinar tellus sodales ac. Duis vitae posuere tortor. Cras sapien diam, vestibulum at velit in, sagittis molestie arcu. Cras aliquam rutrum purus, in consectetur augue tincidunt et. Phasellus dictum risus quis massa maximus, sit amet finibus lacus aliquam. In turpis tortor, luctus id volutpat ac, ultricies quis sem. Suspendisse dignissim egestas ullamcorper. Integer aliquet, tortor sit amet vestibulum suscipit, augue enim rutrum diam, tincidunt pellentesque nisi augue sed dui. Cras vitae dui in tellus cursus interdum.
            </p>
        </div>
    </div>
    </form>
</body>
</html>


12) jQuery UI Tooltip
-----------------------------
Tooltips are used with the element - to display a "title" in the title box next to the element, when you hover the element with your mouse. 

Following is a list of different options that can be used with this method.

content 	This option is used to represent the content of a tooltip. By default its value is function returning the title attribute.
disabled 	If you set this option to true, it disables the tooltip. By default its value is false.
hide 	This option is used to represent the animation effect when hiding the tooltip. By default its value is true.
items 	This option specifies which items can show tooltips. By default its value is [title].
position 	This option is used to indicate the position of the tooltip with respect to the associated target element. By default its value is function returning the title attribute. Its possible values are: my, at, of, collision, using, within.
show 	This option represents how to animate the showing of tooltip. By default its value is true.
tooltipClass 	This option is a class which can be added to the tooltip widget for tooltips such as warning or errors. By default its value is null.
track 	If you set this option to true, the tooltip follows/tracks the mouse. By default its value is false.



Example - 1 : to demonstrate the tooltip functionality passing no parameters to the tooltip() method. 

Example - 1


Example - 2 : to demonstrate the usage of option position in the tooltip function of jQuery UI.

<html lang="en">  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
body 
{  
 margin-top: 100px;  
}  
.ui-tooltip-content::after, .ui-tooltip-content::before 
{  
content: "";  
position: absolute;  
border-style: solid;  
display: block;  
left: 90px;  
}  
.ui-tooltip-content::before 
{  
bottom: -10px;  
border-color: #AAA transparent;  
border-width: 10px 10px 0;  
}  
.ui-tooltip-content::after 
{  
bottom: -7px;  
border-color: white transparent;  
border-width: 10px 10px 0;  
}  
</style>  

<script>  
$(function() 
{  
$("#tooltip-7").tooltip(
{  
position: 
{  
my: "center bottom",  
at: "center top-10",  
collision: "none"  
}  
});  
});  
</script>  
</head>  
<body>  

<label for="name">Name:</label>  
<input id="tooltip-7" title="Please use capital letters.">  
</body>  
</html>  


Example - 4: to demonstrate event method usage during tooltip functionality. The following example uses the open and close events. 

<html lang="en">  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<script>  
$(function() 
{  
$('.tooltip-9').tooltip(
{  
  items: 'a.tooltip-9',  
  content: 'Are you looking for a training program?',  
  show: "slideDown", // show immediately 
  open: function(event, ui)  
  {  
   ui.tooltip.hover(function () 
   {  
    $(this).fadeTo("slow", 0.5);  
   });  
  }  
 });  
});  
$(function() {  
 $('.tooltip-10').tooltip(
 {  
  items: 'a.tooltip-10',  
  content: 'Welcome to Peers Tech',  
  show: "fold",   
  close: function(event, ui)  
  {  
  ui.tooltip.hover(function()  
  {  
  $(this).stop(true).fadeTo(500, 1);   
  },  
  function()  
  {  
  $(this).fadeOut('500', function()  
  {  
  $(this).remove();  
  });  
 });  
 }  
 });  
 });  
 </script>  
 </head>  
 <body style="padding:100px;">  
 
 <div id="target">  
 <a href="#" class="tooltip-9">Hover over me!</a><br/>  
<a href="#" class="tooltip-10">Hover over me too!</a>  
</div>  
</body>  
</html>  

*****************************************

jQUERY EFFECTS
==============
1) jQuery UI hide

The jQuery hide() method is used to manage jQuery UI visual effects. It applies an animation effect to hide elements.

Syntax:

    .hide( effect [, options ] [, duration ] [, complete ] )   

Parameters of hide method:

    Effect: This parameter specifies the effects which are used for transition.
    Options: This is used for specifying the specific setting and easing for the effects. Each effect has its own set of options.
    Duration: This specifies the time duration and indicates the number of milliseconds of the effect. Its default value is 400.
    Complete: It is a callback method. It is called for each element when the effect is completed for the elements.


Example - 1 : example of jQuery UI shake effect with hide() method.

<html lang="en">  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.toggler-1 
{ 
width: 500px; 
height: 200px; 
}  
#button-1 
{ 
padding: .5em 1em; 
text-decoration: none; 
}  
#effect-1 
{ 
width: 240px; 
height: 160px; 
padding: 0.4em; 
position: relative; 
}  
#effect-1 h3 
{ 
margin: 0; 
padding: 0.4em; 
text-align: center; 
}  
</style>  
<script>  
$(function() 
{  
function runEffect() 
{  
$("#effect-1").hide("shake",{
times:10, distance: 200}, 1000, callback );  
};  
// callback function to bring a hidden box back  
function callback() 
{  
setTimeout(function() 
{  
$( "#effect-1" ).removeAttr( "style" 
).hide().fadeIn();  
}, 1000 );  
};  
// set effect from select menu value  
$( "#button-1" ).click(function() {  
runEffect();  
return false;  
});  
});  
</script>  
</head>  
<body>  
<div class="toggler-1">  
<div id="effect-1" class="ui-widget-content ui-corner-all">  
<h3 class="ui-widget-header ui-corner-all">Hide</h3>  
<p>  
Peers Tech provides easy and point to 
point learning of various software technologies such as  Java , Android, Design Pattern, JavaScript,   AJAX, SQL, Cloud Computing,Python etc.  
</p>  
</div>  
</div>  
<a href="#" id="button-1" class="ui-state-default ui-corner-all">Shake Effect Hide</a>  
</body>  
</html>  


2) jQuery UI show

The jQuery show() method is used to manage jQueryUI visual effects. It is intended to display an item using the indicated effect. It specifies the visibility of the elements, which are wrapped within the specified effects.

Syntax:

    .show( effect [, options ] [, duration ] [, complete ] )   

Parameters of show method:

    Effect:This parameter specifies the effects which are used for transition.
    Options:This is used for specifying the specific setting and easing for the effects. Each effect has its own set of options.
    Duration: This specifies the time duration and indicates the number of milliseconds of the effect. Its default value is 400.
    Complete: It is a callback method. It is called for each element when the effect is completed for the elements.

Example : - 1 

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI show Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         .toggler { width: 500px; height: 200px; }  
         #button { padding: .5em 1em; text-decoration: none; }  
         #effect { width: 240px; height: 155px; padding: 0.4em; position: relative; }  
         #effect h3 { margin: 0; padding: 0.4em; text-align: center; }  
      </style>  
      <script>  
         $(function() {  
            // run the currently selected effect  
            function runEffect() {  
               // run the effect  
               $( "#effect" ).show( "shake", {times: 15,distance: 200}, 1000, callback);  
            };  
            //callback function to bring a hidden box back  
            function callback() {  
               setTimeout(function() {  
                  $( "#effect:visible" ).removeAttr( "style" ).fadeOut();  
               }, 1000 );  
            };  
            $( "#button" ).click(function() {  
               runEffect();  
               return false;  
            });  
            $( "#effect" ).hide();  
         });  
      </script>  
   </head>  
   <body>  
      <div class="toggler">  
         <div id="effect" class="ui-widget-content ui-corner-all">  
            <h3 class="ui-widget-header ui-corner-all">Show</h3>  
            <p>  
             Peers Tech provides easy and point to point learning of varioussoftware technologiessuch as  Core Java , Android, Design Pattern, JavaScript, AJAX, Python etc.  
            </p>  
         </div>  
      </div>  
      <a href="#" id="button" class="ui-state-default ui-corner-all">Show method with Shake effect</a>  
   </body>  
</html>  


Show & Hide.html
-------------------------
<!DOCTYPE html>
<html>
<head>
    <title>jQuery UI Show/Hide Effects</title>
    <link rel="stylesheet" href="style.css"/>
    <link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
    <script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
    <script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

    <script type="text/javascript">
        $("document").ready(function() {
            $("#show1").click(function(evt) {
                $("#theDiv").show("blind", 500);
            });
            $("#hide1").click(function(evt) {
                $("#theDiv").hide("blind", 500);
            });
            $("#show2").click(function(evt) {
                $("#theDiv").show("bounce", 500);
            });
            $("#hide2").click(function(evt) {
                $("#theDiv").hide("bounce", 500);
            });
            $("#show3").click(function(evt) {
                $("#theDiv").show("explode", 500);
            });
            $("#hide3").click(function(evt) {
                $("#theDiv").hide("explode", 500);
            });
            $("#show4").click(function(evt) {
                $("#theDiv").show("highlight", 500);
            });
            $("#hide4").click(function(evt) {
                $("#theDiv").hide("highlight", 500);
            });
            $("#show5").click(function(evt) {
                $("#theDiv").show("puff", 500);
            });
            $("#hide5").click(function(evt) {
                $("#theDiv").hide("puff", 500);
            });
        });
    </script>
    <style>
        #theDiv {
            width: 400px;
            height: 300px;
            padding: 5pt 5pt 5pt 5pt;
            margin: 10pt;
            overflow: hidden
        }
        .divAppearance {
            background-color: #b3c8d0;
            color: black;
            border: 5px solid #a9a9a9;
        }
        button {
            width:150px;
            margin: 10pt
        }
    </style>
</head>
<body>
    <h1>Using the Show/Hide Effects</h1>
    <p>jQueryUI extends the base jQuery set of Show and Hide behaviors.</p>
    <p>There are 13 different ways of making elements appear and disappear: blind, bounce, clip, drop, explode, fold, highlight, puff, pulsate, scale, shake, size, and slide.</p>
    <div id="theDiv" class="divAppearance">
        <h2>Show/Hide Effects</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sit amet ullamcorper nisi. Integer vel tincidunt tortor. Phasellus quis tempor est, ut ultrices tellus. </p>
    </div>
    <div>
        <button id="show1">Show Blinds</button>
        <button id="hide1">Hide Blinds</button>
    </div>
    <div>
        <button id="show2">Show Bounce</button>
        <button id="hide2">Hide Bounce</button>
    </div>
    <div>
        <button id="show3">Show Explode</button>
        <button id="hide3">Hide Explode</button>
    </div>
    <div>
        <button id="show4">Show Highlight</button>
        <button id="hide4">Hide Highlight</button>
    </div>
    <div>
        <button id="show5">Show Puff</button>
        <button id="hide5">Hide Puff</button>
    </div>
</body>
</html>


3) jQuery UI toggle

The jQuery toggle() method is used to toggle the show() or hide() method depending on whether the element is hidden or not.

Syntax:

    .hide( effect [, options ] [, duration ] [, complete ] )   

Parameters of toggle method:

    Effect:This parameter specifies the effects which are used for transition.
    Options: This is used for specifying the specific setting and easing for the effects. Each effect has its own set of options.
    Duration:This specifies the time duration and indicates the number of milliseconds of the effect. Its default value is 400.
    Complete:It is a callback method. It is called for each element when the effect is completed for the elements.


<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI Toggle Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         .toggler { width: 500px; height: 200px; }  
         #button { padding: .5em 1em; text-decoration: none; }  
         #effect { width: 240px; height: 155px; padding: 0.4em; position: relative; }  
         #effect h3 { margin: 0; padding: 0.4em; text-align: center; }  
      </style>  
      <script>  
         $(function() {  
            function runEffect() {  
               $( "#effect" ).toggle('explode', 300);  
            };  
            $( "#button" ).click(function() {  
               runEffect();  
               return false;  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div class="toggler">  
      <div id="effect" class="ui-widget-content ui-corner-all">  
         <h3 class="ui-widget-header ui-corner-all">Toggle</h3>  
         <p>  
         Peers Tech provides easy and point to point learning of various softwares such as Core Java , Android, Design Pattern, JavaScript, AJAX, SQL, Python etc.  
         </p>  
      </div>  
      </div>  
      <a href="#" id="button" class="ui-state-default ui-corner-all">Togglemethod with explode effect</a>  
   </body>  
</html>  

4) jQuery UI addClass

The jQuery addclass() method is used to allow animating the changes to the CSS properties. It adds specified classes to the matched elements while animating all style changes.

Syntax:

Following is a basic syntax of jQuery UI addclass() method: (Added in version 1.0)

    .addClass( className [, duration ] [, easing ] [, complete ] )  

Parameters of addclass () method:

    ClassName: This is a string which contains one or more CSS classes. (In case of more CSS classes, they are separated by space.)
    Duration:This is used to specify the time duration in milliseconds. The 0 value takes the element directly to the new style, without progress. Its default value is 400.
    Easing: It is a type string and indicates the way to progress in the effect. Its default value is swing.
    Complete: It is a callback method call for each element when the when the effect is completed for this element.

Syntax for jQuery addClass method: (Added in version 1.9)

The new version 1.9 of jQueryUI also supports children option, which will also animate descendant elements.

Syntax:

    .addClass( className [, options ] )   

Parameters of addclass() method in version 1.9:

className: This is a string which contains one or more CSS classes. (In case of more CSS classes, they are separated by space.)

options: It is used to specify all animation settings. All properties are optional. Its possible values are:

    Duration: This is a type of number or string and indicates the time duration of the effect. It is counted in millisecond. The value of 0 takes the element directly in the new style, without progress. Its default value is 400.
    Easing:It is a string. It specifies the way to progress in the effect. Its default value is swing.
    Complete:It is a callback method called for each element when the effect is done for this element.
    Children: This is a Boolean type and specifies whether the animation should additionally be applied to all descendants of the matched elements. Its default value is false.
    Queue:This is of Boolean type or string type and specifies whether to place the animation in the effects queue. Its default value is TRUE.


<html>  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI addClass Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <style>  
         .elemClass {  
            width: 300px;  
            height: 100px;  
            background-color: #76eec6;  
         }  
         .myClass {  
            font-size: 30px; background-color: #eed5b7; color: #0000ee;  
         }  
      </style>  
      <script type="text/javascript">  
         $(document).ready(function() {  
            $('.button').click(function() {  
               if (this.id == "add") {  
                  $('#animTarget').addClass("myClass", "fast")  
               } else {  
               $('#animTarget').removeClass("myClass", "fast")  
               }  
            })  
         });  
      </script>  
   </head>  
   <body>  
      <div id=animTarget class="elemClass">  
         Hello! Peers Tech 
      </div>  
      <button class="button" id="add">Add Class</button>  
      <button class="button" id="remove">Remove Class</button>  
   </body>  
</html>  


<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI addClass Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         .red { color: red; }  
         .big { font-size: 5em; }  
         .spaced { padding: 1em; }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('.button-1').click(function() {  
               $( "#welcome" ).addClass( "red big spaced", 3000 );  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <p id="welcome">You are here at- Peers Tech</p>  
      <button class="button-1">Click here</button>  
   </body>  
</html>  


5) jQuery UI removeClass

The jQuery removeClass() method is used to manage jQueryUI visual effects. It removes applied classes from the elements.

removeClass() method removes the specified classes to the matched elements while animating all style changes.

Syntax:

Following is a basic syntax of jQueryUI removeclass() method: (Added in version 1.0 of jQueryUI)

    .removeClass( className [, duration ] [, easing ] [, complete ] )  

Parameters of removeClass() method:

    ClassName: This is a string which contains one or more CSS classes. (In case of more CSS classes, they are separated by space.)
    Duration:This is used to specify the time duration in milliseconds. The 0 value takes the element directly to the new style, without progress. Its default value is 400.
    Easing: It is a type string and indicates the way to progress in the effect. Its default value is swing.
    Complete: It is a callback method call for each element when the when the effect is completed for this element.

Syntax for jQuery removeClass method: (Added in version 1.9)

The new version 1.9 of jQueryUI also supports children option, which will also animate descendant elements.

Syntax:

    .removeClass( className [, options ] )   

Parameters of removeClass() method in version 1.9:

className:This is a string which contains one or more CSS classes. (In case of more CSS classes, they are separated by space.)

options: It is used to specify all animation settings. All properties are optional. Its possible values are:

    Duration:This is a type of number or string and indicates the time duration of the effect. It is counted in millisecond. The value of 0 takes the element directly in the new style, without progress. Its default value is 400.
    Easing:It is a string. It specifies the way to progress in the effect. Its default value is swing.
    Complete:It is a callback method called for each element when the effect is done for this element.
    Children: This is a Boolean type and specifies whether the animation should additionally be applied to all descendants of the matched elements. Its default value is false.
    Queue:This is of Boolean type or string type and specifies whether to place the animation in the effects queue. Its default value is TRUE.


<html>  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI addClass Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <style>  
         .elemClass {  
            width: 300px;  
            height: 100px;  
            background-color: #76eec6;  
         }  
         .myClass {  
            font-size: 30px; background-color: #eed5b7; color: #0000ee;  
         }  
      </style>  
      <script type="text/javascript">  
         $(document).ready(function() {  
            $('.button').click(function() {  
               if (this.id == "add") {  
                  $('#animTarget').addClass("myClass", "fast")  
               } else {  
               $('#animTarget').removeClass("myClass", "fast")  
               }  
            })  
         });  
      </script>  
   </head>  
   <body>  
      <div id=animTarget class="elemClass">  
         Hello! Peers Tech  
      </div>  
      <button class="button" id="add">Add Class</button>  
      <button class="button" id="remove">Remove Class</button>  
   </body>  
</html>  


6) jQuery UI switchClass

The jQuery UI switchClass() method is used to move from one CSS class to another CSS class, animating the transition from one state to another state.

Syntax:

Let's see the basic syntax of jQueryUI swithClass() method: (Added in version 1.0 of jQueryUI)

    .switchClass( removeClassName, addClassName [, duration ] [, easing ] [, complete ] )  

Parameters of switchClass() method:

removeClassName: It is a string. It represents the CSS class name or space demarcated list of class names, to be removed.

addClassName: It is of type string. It represents one or more class names which are added to the class attribute of each matched element.

duration: This is of type number or string and used to specify the time duration in millisecond. Its default value is 400.

easing: It specifies the name of the easing function to be passed to the animate() method.

complete: It is a callback method called for each element when the effect is completed for this element.

Syntax for jQuery switchClass() method: (Added in version 1.9)

The new version 1.9 of jQueryUI also supports children option, which will also animate descendant elements.

Syntax:

    .switchClass( removeClassName, addClassName [, options ] )  

Parameters of switchClass() method: (Added in version 1.9)

removeClassName: It is a string. It represents the CSS class name or space demarcated list of class names, to be removed.

addClassName:It is of type string. It represents one or more class names which are added to the class attribute of each matched element.

options: It is used to specify all animation settings. All properties are optional. Its possible values are:

    Duration:This is a string or number. It specifies how long the animation will run. Its default value is 400.
    Easing:It is a string which specifies the easing function used for transition. Its default value is swing.
    Complete:It is a callback method called for each element when the effect is completed for this element.
    Children: This is a Boolean type and specifies whether the animation should additionally be applied to all descendants of the matched elements. Its default value is FALSE.
    Queue:This is of Boolean type or string type and specifies whether to place the animation in the effects queue. Its default value is TRUE.


<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI Switch Class Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         .LargeClass  
         {  
            font-family: NewTimesRoman;  
            font-size: large;  
            font-weight: bold;  
            color: Red;  
         }  
         .NormalClass  
         {  
            font-family: Arial;  
            font-size: small;  
            font-weight: bold;  
            color: Blue;  
         }  
      </style>  
      <script>  
         $(function() {  
            $('#btnSwitch').click(function(){  
               $(".NormalClass").switchClass("NormalClass","LargeClass",'fast');  
               $(".LargeClass").switchClass("LargeClass","NormalClass",'fast');  
               return false;  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div class="NormalClass">  
        You are here at Peers Tech  
      </div>  
      <div class="NormalClass">  
Peers Tech is commited to provide easy and point to point learning of various tutorials.  
      </div>  
      <br />  
      <input type="button" id="btnSwitch" value="Switch Class" />  
   </body>  
</html>  


7) jQuery UI Color Animation

jQuery UI adds some methods in core jQuery to extend the features of animate functionality. You can animate different transitions for an element. jQuery UI also supports animating colors. Here, you can animate one or more CSS properties that define an element colors.

Following is a list of CSS properties that support animate method.

    backgroundColor :It is used to set the background color of the element.
    borderTopColor :It is used to set the color for top side of the element border.
    borderBottomColor :It is used to set the color for bottom side of the element border.
    borderLeftColor :It is used to set the color for left side of the element border.
    borderRightColor : It is used to set the color for right side of the element border.
    color :It is used to set the text color of the element.
    outlineColor : It is used to set the color for the outline; used to emphasize the element.

Syntax for the jQuery UI animate method:

    $( "#selector" ).animate(  
       { backgroundColor: "black",  
          color: "white"  
       }  
    );  


    <!DOCTYPE html>  
    <html>  
    <head>  
    <meta charset="utf-8">  
    <title>jQuery UI addClass Example</title>  
    <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
    <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
    <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
    <style>  
     .elemClass {  
    width: 200px;  
    height: 50px;  
    background-color: #b9cd6d;  
    }  
    .myClass {  
    font-size: 40px; background-color: #ccc; color: white;  
    }  
    </style>  
    <script type="text/javascript">  
    $(document).ready(function() {  
    $('#button-1').click(function() {  
    $('#animTarget').animate({  
    backgroundColor: "red",  
    color: "white"  
    })  
     })  
    });  
    </script>  
    </head>  
    <body>  
    <div id=animTarget class="elemClass">  
    Hello Peers Tech </div>  
    <button id="button-1">Click Me</button>  
    </body>  
    </html>  


<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>jQuery UI Effects - Animate demo</title>  
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">  
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>  
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>  
  <link rel="stylesheet" href="/resources/demos/style.css">  
  <style>  
    .toggler { width: 500px; height: 200px; position: relative; }  
    #button { padding: .5em 1em; text-decoration: none; }  
    #effect { width: 240px; height: 135px; padding: 0.4em; position: relative; background: #fff; }  
    #effect h3 { margin: 0; padding: 0.4em; text-align: center; }  
  </style>  
  <script>  
  $(function() {  
    var state = true;  
    $( "#button" ).click(function() {  
      if ( state ) {  
        $( "#effect" ).animate({  
          backgroundColor: "#aa0000",  
          color: "#fff",  
          width: 500  
        }, 1000 );  
      } else {  
        $( "#effect" ).animate({  
          backgroundColor: "#fff",  
          color: "#000",  
          width: 240  
        }, 1000 );  
      }  
      state = !state;  
    });  
  });  
  </script>  
</head>  
<body>  
<div class="toggler">  
  <div id="effect" class="ui-widget-content ui-corner-all">  
    <h3 class="ui-widget-header ui-corner-all">Animate</h3>  
    <p>  
   jQuery is a fast, small, cross-platform and feature-rich JavaScript library. It is designed to simplify the client-side scripting of HTML.  
</p>  
</div>  
</div>  
<button id="button" class="ui-state-default ui-corner-all">Toggle Effect</button>  
</body>  
</html>  


ColorAnimation.html
-----------------------------

<!DOCTYPE html>
<html>
<head>
    <title>jQuery UI Color Animation</title>
    <link rel="stylesheet" href="style.css"/>
    <link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
    <script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
    <script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

    <script type="text/javascript">
        $("document").ready(function() {
            $("#anim1").click(function(evt) {
                $("#theDiv").animate({
                    backgroundColor: "red",
                    color: "white",
                    borderColor: "blue"
                }, 800);
            });
            $("#anim2").click(function(evt) {
                $("#theDiv").animate({
                    backgroundColor: "#b3c8d0",
                    color: "#000",
                    borderColor: "#a9a9a9"
                }, 800);
            });
        });
    </script>
    <style>
        #theDiv {
            width: 400px;
            height: 300px;
            padding: 5pt 5pt 5pt 5pt;
            margin: 10pt;
            overflow: hidden
        }
        div {
            background-color: #b3c8d0;
            color: black;
            border: 5px solid #a9a9a9;
        }
        button {
            margin: 5pt
        }
    </style>
</head>
<body>
    <h1>Using the Color Animation Effect</h1>
    <p>jQueryUI contains the jQuery Color plugin in its default download. This plugin extends jQueryUI with the ability to animate colors.</p>
    <p>The properties that can have their colors animated are: <code>backgroundColor</code>, <code>borderBottomColor</code>, <code>borderLeftColor</code>, <code>borderRightColor</code>, <code>borderTopColor</code>, <code>color</code>, <code>columnRuleColor</code>, <code>outlineColor</code>, <code>textDecorationColor</code>, <code>textEmphasisColor</code></p>
    <div id="theDiv">
        <h2>Color Animations!</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sit amet ullamcorper nisi. Integer vel tincidunt tortor. Phasellus quis tempor est, ut ultrices tellus. </p>
    </div>
    <button id="anim1">Animation 1</button>
    <button id="anim2">Animation 2</button>
</body>
</html>




8) jQuery UI Easing

What is Easing?

We all know that no object in real life works instantly. No object just starts and stops instantly, and almost never moves at a constant speed.

For example: If you drop a ball on the ground, it will first accelerate downward and then bounce back up after hitting the floor.

jQueryUI Easing

jQueryUI Easing function is used to specify the rate of change of a parameter with respect to time. There are different types of easing functions in jQuery like linear, swing etc. Some easing provides their result in negative value during the animation. Its depend on the properties that are being animated.
How to choose easing functions

    CSS: CSS properties transition and animation facilitates users to pick easing functions. But they don?t support all easing functions and you have to specify the desired easing functions yourself. For example: Bezier curve
    SCSS: Sass/SCSS can be used to describe animation also. Compass removes prefixes before the transition and animation properties, and the Compass Ceaser Plugin facilitates you pass the easing function by name.
    Jquery Easing Plugin: jQuery with the jQuery Easing Plugins is the easiest way to describe animation with easing.


<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>jQuery UI Effects - Easing demo</title>  
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">  
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>  
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>  
  <link rel="stylesheet" href="/resources/demos/style.css">  
  <style>  
  .graph {  
    float: left;  
    margin-left: 10px;  
  }  
  </style>  
  <script>  
  $(function() {  
    if ( !$( "<canvas>" )[0].getContext ) {  
      $( "<div>" ).text(  
        "Your browser doesn't support canvas, which is required for this demo."  
      ).appendTo( "#graphs" );  
      return;  
    }  
  var i = 0,  
      width = 100,  
      height = 100;  
 $.each( $.easing, function( name, impl ) {  
      var graph = $( "<div>" ).addClass( "graph" ).appendTo( "#graphs" ),  
        text = $( "<div>" ).text( ++i + ". " + name ).appendTo( graph ),  
        wrap = $( "<div>" ).appendTo( graph ).css( 'overflow', 'hidden' ),  
        canvas = $( "<canvas>" ).appendTo( wrap )[ 0 ];  
  canvas.width = width;  
      canvas.height = height;  
      var drawHeight = height * 0.8,  
        cradius = 10;  
        ctx = canvas.getContext( "2d" );  
      ctx.fillStyle = "black";  
 // draw background  
      ctx.beginPath();  
      ctx.moveTo( cradius, 0 );  
      ctx.quadraticCurveTo( 0, 0, 0, cradius );  
      ctx.lineTo( 0, height - cradius );  
      ctx.quadraticCurveTo( 0, height, cradius, height );  
      ctx.lineTo( width - cradius, height );  
      ctx.quadraticCurveTo( width, height, width, height - cradius );  
      ctx.lineTo( width, 0 );  
      ctx.lineTo( cradius, 0 );  
      ctx.fill();  
 // draw bottom line  
      ctx.strokeStyle = "#555";  
      ctx.beginPath();  
      ctx.moveTo( width * 0.1, drawHeight + .5 );  
      ctx.lineTo( width * 0.9, drawHeight + .5 );  
      ctx.stroke();  
// draw top line  
      ctx.strokeStyle = "#555";  
      ctx.beginPath();  
      ctx.moveTo( width * 0.1, drawHeight * .3 - .5 );  
      ctx.lineTo( width * 0.9, drawHeight * .3 - .5 );  
      ctx.stroke();  
 // plot easing  
      ctx.strokeStyle = "white";  
      ctx.beginPath();  
      ctx.lineWidth = 2;  
      ctx.moveTo( width * 0.1, drawHeight );  
      $.each( new Array( width ), function( position ) {  
        var state = position / width,  
          val = impl( state, position, 0, 1, width );  
        ctx.lineTo( position * 0.8 + width * 0.1,  
          drawHeight - drawHeight * val * 0.7 );  
      });  
      ctx.stroke();  
 // animate on click  
      graph.click(function() {  
        wrap  
          .animate( { height: "hide" }, 2000, name )  
          .delay( 800 )  
          .animate( { height: "show" }, 2000, name );  
      });  
 graph.width( width ).height( height + text.height() + 10 );  
    });  
  });  
  </script>  
</head>  
<body>  
 <div id="graphs"></div>  
 </body>  
</html>   

Easing List

linear
swing
jswing
easeInQuad
easeOutQuad
easeInOutQuad
easeInCubic
easeOutCubic
easeInOutCubic
easeInQuart
easeOutQuart
easeInOutQuart
easeInSine
easeOutSine
easeInOutSine
easeInExpo
easeOutExpo
easeInOutExpo
easeInQuint
easeOutQuint
easeInOutQuint
easeInCircdef
easeInQuad
easeOutQuad
easeInOutQuad
easeInCubic
easeOutCubic
easeInOutCubic
easeInQuart
easeOutQuart
easeInOutQuart
easeInSine
easeOutSine
easeInOutSine
easeInExpo
easeOutExpo
easeInOutExpo
easeInQuint
easeOutQuint
easeInOutQuint
easeInCirc
easeOutCirc
easeInOutCirc
easeInElastic
easeOutElastic
easeInOutElastic
easeInBack
easeOutBack
easeInOutBack
easeInBounce
easeOutBounce
easeInOutBounce
easeOutCirc
easeInOutCirc
easeInElastic
easeOutElastic
easeInOutElastic
easeInBack
easeOutBack
easeInOutBack
easeInBounce
easeOutBounce
easeInOutBounce


jQuery easing effects - download:
http://gsgd.co.uk/sandbox/jquery/easing/jquery.easing.1.3.js


to see preview of easing effects:

http://jqueryui.com/resources/demos/effect/easing.html

http://matthewlein.com/experiments/easing.html

http://ralphwhitbeck.com/demos/jqueryui/effects/easing/



jQuery UI Effect

The effect() method is used to apply an animation effect to the element without having to show or hide it. It is one of the method which is used to manage jQuery UI visual effects.

Syntax:

    .effect( effect [, options ] [, duration ] [, complete ] )   

Parameters of effect() method:

    Effect: This parameter specifies the effects which are used for transition.
    Options: This is used for specifying the specific setting and easing for the effects. Each effect has its own set of options.
    Duration: This specifies the time duration and indicates the number of milliseconds of the effect. Its default value is 400.
    Complete: It is a callback method. It is called for each element when the effect is completed for the elements.

Most used jQuery UI effects:

Add table:
Effect 	Description
Blind 	Shows or hides the element in the manner of a window blind: by moving the bottom edge down or up, or the right edge to the right or left, depending upon the specified direction and mode.
Bounce 	Causes the element to appear to bounce in the vertical or horizontal direction, optionally showing or hiding the element.
Clip 	Shows or hides the element by moving opposite borders of the element together until they meet in the middle, or vice versa.
Explode 	Shows or hides the element by splitting it into multiple pieces that move in radial directions as if imploding into, or exploding from, the page.
Drop 	Shows or hides the element by making it appear to drop onto, or drop off of, the page.
Fade 	Shows or hides the element by adjusting its opacity. this is the same as the core fade effects, but without options.
Fold 	Shows or hides the element by adjusting opposite borders in or out, and then doing the same for the other set of borders.
Highlight 	Calls attention to the element by momentarily changing its background color while showing or hiding the element.
Puff 	Expands or contracts the element in place while adjusting its opacity.
Shake 	Shakes the element back and forth, either vertically or horizontally.
Scale 	Expands or contracts the element by a specified percentage.
Pulsate 	Adjusts the opacity of the element on and off before ensuring that the element is shown or hidden as specified.
Size 	Resizes the element to a specified width and height. similar to scale except for how the target size is specified.
Slide 	Moves the element such that it appears to slide onto or off of the page.
Transfer 	Animates a transient outline element that makes the element appear to transfer to another element. the appearance of the outline element must be defined via css rules for the ui-effects-transfer class, or the class specified as an option.


Example 1. Shake effect:

<html lang="en">  
<head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-1 {  
            height: 50px;  
            width: 100px;  
            background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-1').click(function() {  
               $( "#box-1" ).effect( "shake", {  
                  times: 10,  
                  distance: 150  
               }, 3000, function() {  
               $( this ).css( "background", "#ff4040" );  
            });  
         });  
      });  
</script>  
</head>  
<body>  
<div id="box-1">Click here to<br/><b>Shake Me!</b></div>  
</body>  
</html>  

2. Bounce Effect: 

<html lang="en">  
<head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-1 {  
            height: 50px;  
            width: 100px;  
            background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-1').click(function() {  
               $( "#box-1" ).effect( "bounce", {  
                  times: 10,  
                  distance: 150  
               }, 3000, function() {  
               $( this ).css( "background", "#ff4040" );  
            });  
         });  
      });  
</script>  
</head>  
<body>  
<div id="box-1">Click here to<br/><b>Bounce Me!</b></div>  
</body>  
</html>  

3. Explode Effect: 

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
            background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "explode",  
                  easing: "easeInExpo",  
                  pieces: 16,  
                  duration: 2000  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Explode Me!</b></div>  
   </body>  
</html>  

4. Blind Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
            background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "blind",  
                 duration:0  
              });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Blind Me!</b></div>  
   </body>  
</html>  

5. Clip Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "clip",  
                duration: 2000  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Clip Me!</b></div>  
   </body>  
</html>  

6. Drop Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "drop",  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Drop Me!</b></div>  
   </body>  
</html>  

7. Fade effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "fade",  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Fade Me!</b></div>  
   </body>  
</html>  

8. Fold Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 500px;  
            width: 500px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "fold",  
                  duration: 5000  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Fold Me!</b></div>  
   </body>  
</html>  

9. Highlight Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "highlight",  
                 duration:2000  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Highlight Me!</b></div>  
   </body>  
</html>  

10. Puff Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "puff",  
                duration:5000  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Puff Me!</b></div>  
   </body>  
</html>  

11. Scale effect: 

<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>scale demo</title>  
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">  
  <style>  
  #toggle {  
    width: 100px;  
    height: 100px;  
    background: #7fffd4;  
  }  
  </style>  
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>  
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>  
</head>  
<body>  
<p>Click anywhere to toggle the box.</p>  
<div id="toggle"></div>  
<script>  
$( document ).click(function() {  
  $( "#toggle" ).toggle( "scale" );  
});  
</script>  
</body>  
</html>  


12. Pulsate Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 100px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "pulsate",  
                duration:5000  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Pulsate Me!</b></div>  
   </body>  
</html>  

13. Size Effect:

<html lang="en">  
<head>  
  <meta charset="utf-8">  
  <title>scale demo</title>  
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">  
  <style>  
  #toggle {  
    width: 100px;  
    height: 100px;  
    background: #7fffd4;  
  }  
  </style>  
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>  
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>  
</head>  
<body>  
<p>Click anywhere to toggle the size of the box.</p>  
<div id="toggle"></div>  
<script>  
$( document ).click(function() {  
  $( "#toggle" ).toggle( "size" );  
});  
</script>  
</body>  
</html>  

14. Slide Effect:

<html lang="en">  
   <head>  
      <meta charset="utf-8">  
      <title>jQuery UI effect Example</title>  
      <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
      <script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
      <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
      <!-- CSS -->  
      <style>  
         #box-2 {  
            height: 100px;  
            width: 200px;  
                       background: #7fffd4;  
         }  
      </style>  
      <script>  
         $(document).ready(function() {  
            $('#box-2').click(function() {  
               $( "#box-2" ).effect({  
                  effect: "slide",  
                 duration:1000  
               });  
            });  
         });  
      </script>  
   </head>  
   <body>  
      <div id="box-2">Click here to<br/><b>Slide Me!</b></div>  
   </body>  
</html>  



Add onchange="showDate(this)" to your input with the date picker.

function showDate(input){
$('#div').html(input.value);
}


$("#datepicker").change(function() {
    var date = $(this).datepicker("getDate");
    $("#placeholder").text(date);
});
